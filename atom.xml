<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>inkbottle&#39;s blog</title>
  
  <subtitle>信号连通在人海里，迎面的人满是笑意</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ink-bottle.github.io/"/>
  <updated>2020-12-02T04:21:53.984Z</updated>
  <id>https://ink-bottle.github.io/</id>
  
  <author>
    <name>inkbottle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小球入水Fluent仿真（局部重构，动态层铺，嵌套网格）</title>
    <link href="https://ink-bottle.github.io/2020/12/02/sphere%20water%20entry/"/>
    <id>https://ink-bottle.github.io/2020/12/02/sphere water entry/</id>
    <published>2020-12-02T03:25:07.000Z</published>
    <updated>2020-12-02T04:21:53.984Z</updated>
    
    <content type="html"><![CDATA[<p>初学者在进行相关流体仿真时，小球入水往往是一个非常经典的案例。重要的是，许多研究者曾对小球入水进行了大量的实验研究，保留了丰富的实验成果。这使得人们在进行入水领域的仿真工作时，往往利用小球入水来进行数值算法的验证。本文将利用ANSYS Fluent中的动网格局部重构法（Local Remeshing），动态层铺法（Dynamic Layering）以及嵌套网格（Overset mesh）三种手段对小球入水进行简单的仿真模拟。</p><a id="more"></a><h2 id="几何模型">几何模型</h2><p>真实模型是三维的，这里为了方便起见，采用二维模型考虑。模型尺寸如图所示。单位为mm。重心坐标(0,0,0)，惯性矩Ixx = 20431.71mm^4，Iyy= 20431.71mm<sup>4，Izz=40863.42mm</sup>4，面积A=506.71mm^2。</p><p><img src="https://i.loli.net/2020/11/05/hZHEd4trnKaMDwY.png" alt="屏幕截图 2020-11-05 092730.png"></p><p>对于平面模型计算，fluent默认拉伸厚度为1m，假设小球为钢质小球，密度7800kg/m^3，因此可以计算小球质量mass=7800*506.71e-6=3.952kg。因此UDF采用DEFINE_SDOF_PROPERTIES宏，给质量及三方向惯性矩赋值即可。将以下代码保存为sphere.cpp文件。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"udf.h"</span></span></span><br><span class="line"></span><br><span class="line">DEFINE_SDOF_PROPERTIES(test_box, prop, dt, time, dtime)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">prop[SDOF_MASS] = <span class="number">3.952</span>;</span><br><span class="line"></span><br><span class="line">prop[SDOF_IXX] = <span class="number">20431e-12</span>;</span><br><span class="line"></span><br><span class="line">prop[SDOF_IYY] = <span class="number">20431e-12</span>;</span><br><span class="line"></span><br><span class="line">prop[SDOF_IZZ] = <span class="number">40863e-12</span>;</span><br><span class="line">    </span><br><span class="line">    prop[SDOF_ZERO_TRANS_X] = TRUE;</span><br><span class="line"> </span><br><span class="line">prop[SDOF_ZERO_TRANS_Y] = FALSE;</span><br><span class="line"></span><br><span class="line">prop[SDOF_ZERO_TRANS_Z] = TRUE;</span><br><span class="line"></span><br><span class="line">prop[SDOF_ZERO_ROT_X]   = TRUE;</span><br><span class="line"></span><br><span class="line">prop[SDOF_ZERO_ROT_Y]   = TRUE;</span><br><span class="line"></span><br><span class="line">prop[SDOF_ZERO_ROT_Z]   = TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="局部重构法-local-remeshing">局部重构法（Local Remeshing）</h2><p>在使用非结构网格的区域上一般采用弹簧光顺模型进行动网格划分，但是如果运动边界的位移远远大于网格尺寸，则采用弹簧光顺模型可能导致网格质量下降，甚至出现体积为负值的网格，或因网格畸变过大导致计算不收敛。为了解决这个问题，Fluent 在计算过程中将畸变率过大，或尺寸变化过于剧烈的网格集中在一起进行局部网格的重新划分，如果重新划分后的网格可以满足畸变率要求和尺寸要求，则用新的网格代替原来的网格，如果新的网格仍然无法满足要求，则放弃重新划分的结果。</p><h3 id="网格划分">网格划分</h3><p>在ICEM CFD中划分网格，根据几何模型创建点线，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/gutjw8DmIa75db3.png" alt="屏幕截图 2020-11-05 095127.png"></p><p>根据四条矩形边线创建面，然后以小球边线为划分线划分整个面，之后删除小球内部的面，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/6MqkVijdbYhO3Fz.png" alt="屏幕截图 2020-11-05 101104.png"></p><p>点击创建体，根据矩形对角的两个点进行创建体BODY。接下来创建各个part，分别将上边界（OUTLET），左右边界（SIDEWALL），下边界（DOWNWALL），小球边界（SPHEREWALL），流场面（FLUID）创建为part，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/pEWMRuTzvd3fy7t.png" alt="屏幕截图 2020-11-05 102415.png"></p><p>设置全局网格参数如下，生成全三角形计算网格。</p><p><img src="https://i.loli.net/2020/11/09/d1a9VXDeMiEfIYn.png" alt="屏幕截图 2020-11-05 101834.png"><br><img src="https://i.loli.net/2020/11/09/JWKv1YDUifRru7Q.png" alt="a1be62fbb89e262ec8f5020ce47bfa1.png"></p><p>各个part的网格划分参数如下。</p><p><img src="https://i.loli.net/2020/11/09/lYXwRiAqzI6GWsK.png" alt="屏幕截图 2020-11-05 102707.png"></p><p>点击compute mesh创建面网格，得到粗略的网格划分如图，可见，小球外层应有明显的边界层网格。</p><p><img src="https://i.loli.net/2020/11/09/wQ1nDrybgxLz5Fc.png" alt="dd45f5da5c08374ded92bd586746483.png"></p><p>查看网格质量如图。</p><p><img src="https://i.loli.net/2020/11/09/52mrehJNSi94oCt.png" alt="1dabd765a3676e3fa1fa5cf00c3aa8d.png"></p><p>点击smooth elements globally，进行网格光顺，参数如下。</p><p><img src="https://i.loli.net/2020/11/09/3aTbmxUpXNsCJE1.png" alt="c8a5d0cd3fcb7c2ddaae01d7cffa594.png"></p><p>光顺后的网格质量如下，网格质量在0.5以上。由于这个例子只做简单的教程，因而不进一步完善网格。</p><p><img src="https://i.loli.net/2020/11/09/DKAFLhlZIgdUEu4.png" alt="ca1d35241baa368f4e8858bde9e0912.png"></p><h3 id="仿真计算">仿真计算</h3><p>点击保存,注意路径不能有中文。点击OUTPUT，选择求解器Fluent，点击保存，选择刚才的prj，弹出选项框，可修改命名，保存为msh。点击保存并输出msh文件。Fluent读入msh文件，scale网格设定合适的单位。将网格尺寸设为mm，显示尺寸设为m。如图所示。</p><p><img src="https://i.loli.net/2020/11/09/6z58MLdxOERHjet.png" alt="eab56865dd58d6bbcb4390eceb2c3b3.png"></p><p>设置VOF多相流模型，（models-Multiphase:多相设置，流体中有两相或以上的介质），设置body force formulation为Implicit Body Force。</p><p><img src="https://i.loli.net/2020/11/09/iUHK6ZN12IGpYaJ.png" alt="72b844c7c431d94fed9526cc0d63860.png"></p><p>Viscous表示粘性方程设置，（可选择无粘流动、层流流动、S-A方程湍流模型、k-e两方程湍流模型、k-Ω两方程湍流模型、雷诺应力模型、离散涡模型、大涡模型等）。选择湍流模型为标准k-epsilon模型，采用增强壁面函数Near-Wall。材料数据库中添加water-liquid（Materials-Fluid-Air-Fluent Database-Copy）。设置水为主相，空气为第二相(Multiphase-phases-phase1-water-phase2-air)。</p><p><img src="https://i.loli.net/2020/11/09/u4v6Pt2BVZQ1F5S.png" alt="bad6a24c971b8de8e0202cab220c1c7.png"></p><p>本例中需要设置的边界条件为出口边界。该边界设置为压力出口，静压为0。设置第二相空气相的体积分数为1。压力出口边界点击operating conditions，将参考压力边界设置为y=0.1m(即上边界所处的y轴坐标)，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/ACqxaOU7wpml9JS.png" alt="f574f4a5ee7cf3e4446ecefe6253b24.png"></p><p><img src="https://i.loli.net/2020/12/02/OjTBqmtcJd7ewDQ.png" alt="微信截图_20201202102109.png"></p><p>点击initialization对流场进行初始化设置，在弹出的框中下方点击initialize。之后右键cell registers→new→field variable（19前的版本选择iso value）</p><p><img src="https://i.loli.net/2020/11/09/ndFVhB25IZbMgLN.png" alt="93f5728f64fc488f847255322d249a7.png"></p><p>在弹出的窗口中，选择field value of 分别为cell info 和 cell element type，type选择为cells in range，iso-min和iso-max均设置为3，点击save/display。这一步的主要目的是选择出小球的边界层网格，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/4PuYMKJeQNW92Xm.png" alt="af424a3c3041e16f51bc98498a0a036.png"><br><img src="https://i.loli.net/2020/11/09/KSztZCvB4LyO6Qe.png" alt="7d367cf2b0ab8cad94a2362a2572fac.png"></p><p>点击separate→cells，进行网格剖分，如图所示。</p><p><img src="https://i.loli.net/2020/11/09/9jhrGSgDPOLf8Id.png" alt="d20a56b44265245bea5b373195f9719.png"><br><img src="https://i.loli.net/2020/11/09/EPkhWXvZnlAN9uf.png" alt="bcb1d34e75d5d36f7485e36f70a0763.png"></p><p>现在点击cell zone conditions，可以发现，多了一个fluid:008。之后在菜单栏中的surface点击create→zone，在左侧选择fluid:008，点击create。</p><p><img src="https://i.loli.net/2020/11/09/GgTxptQLDj7C8dB.png" alt="dd2e34a935159ac5334d96c13b5a192.png"></p><p>点击菜单栏中的user-defined→functions→complied，编译并load此UDF。</p><p><img src="https://i.loli.net/2020/11/09/KjR5tmMb4hi92kI.png" alt="5ec7362fc795b314746702de3555dd2.png"></p><p>激活动网格。在Dynamic mesh面板中，激活smoothing与Remeshing方法，同时勾选Six DOF选项。点击mesh methods 下的settings，选择spring layer。然后点击remeshing，点击default，然后点击ok。</p><p><img src="https://i.loli.net/2020/11/09/aph2EDT8WiorJSj.png" alt="b18fdd9b62a3bd35cdd11c9bd093bc7.png"><br><img src="https://i.loli.net/2020/11/09/gi9FGkAVRPLNrjb.png" alt="1d860e821744b1b3dd9844ae8b956cb.png"></p><p>关闭mesh method settings面板，进入six dof setting面板。勾选Write Motion History，这样运动数据即可写入文本文件。设置完毕后关闭6DOF设置面板。Create创建运动区域，如图所示，指定运动区域为spherewall，勾选six dof options中的on选项。点击create。</p><p><img src="https://i.loli.net/2020/11/09/MdCwAN1T39FXxhj.png" alt="f31180428b5f4120502cc1fcb657ebb.png"></p><p>之后指定运动区域为fluid:008，勾选six dof options中的on选项和passive选项。点击create。</p><p><img src="https://i.loli.net/2020/11/09/81chs2DEWjFSRwe.png" alt="d19ee54f4c6a7682671708e17dbc017.png"></p><p>之后右键cell registers→new→region，创建参数如下。</p><p><img src="https://i.loli.net/2020/12/02/EO8PjlMwNZSWv6I.png" alt="微信截图_20201202102546.png"></p><p>设置水的静压梯度。点击菜单栏中的user-defined→field functions→custom，将静压表达式P=rou×g×h写入，由于在这个例子中水面所处坐标为y=-0.24m，因此表达式写为998.2×9.8×(-0.24-y)，点击define即可定义该场函数，如图所示。</p><p><img src="https://i.loli.net/2020/12/02/DTyrohNKBGdEaA4.png" alt="微信截图_20201201215511.png"></p><p>设置完毕后，保存case与data文件。点击initialization，之后点击patch，设置参数如图。点击patch。</p><p><img src="https://i.loli.net/2020/11/09/hBqyvj38eUfXZYw.png" alt="34e39c1364087511a86541cba3f5ba2.png"><br><img src="https://i.loli.net/2020/11/09/RyMrETgcYt6iZVl.png" alt="a4cefc444b860da68e7c981bd8006c7.png"></p><p>设置水的静压梯度。设置参数如下，勾选field function，选择之前定义的场函数，对划分好的region进行patch(也就是对水域进行静压梯度设置)。</p><p><img src="https://i.loli.net/2020/12/02/dk8zegm2anuHlUO.png" alt="微信截图_20201202110618.png"></p><p>点击results→graphics→contours，新建一个云图，选择各相的体积分数云图。</p><p><img src="https://i.loli.net/2020/11/09/FPjA1xY3T9ep64W.png" alt="355431627d82341ba37f2e42cbbaa67.png"></p><p>如果显示如图，则patch无误。</p><p><img src="https://i.loli.net/2020/11/09/DuiyUR23emcN8wt.png" alt="7b7e60d3b173b1b3dc9e9bbde188c25.png"></p><p>另外，再新建一个压力云图，如果显示如图，则水的静压梯度设置无误。</p><p><img src="https://i.loli.net/2020/12/02/YIetPC2dnjvEF4J.png" alt="微信截图_20201202110715.png"></p><p>点击calculation activities→autosave，设置每100步自动保存。</p><p><img src="https://i.loli.net/2020/11/10/Hz9UOFYoSNg4Wbm.png" alt="0be193ff6cee75ee8267b6830838ab2.png"></p><p>点击calculation activities→solution animations，设置每100步自动保存动画文件。</p><p><img src="https://i.loli.net/2020/11/10/o1QDGWl5vZ8r3Hc.png" alt="2fcaaaeb8781c4d60739de4fe98acc3.png"></p><p>设置时间步长time size为0.0001s，时间步数time step为4000，即计算0.4s情况。设置内迭代数量为20，然后进行计算。</p><p><img src="https://i.loli.net/2020/11/10/QEKPbN3LwygTrSM.png" alt="39077954517b68b11639c76108a83c8.png"></p><h3 id="仿真结果">仿真结果</h3><p>可见入水空泡壁面非常粗糙，但是大致给出了入水空泡的扩张和颈缩状态，这主要是因为网格本身密度不够以及网格变形的问题。如果要得到更加精细的结果，可以对水面处的网格和小球运动区域的网格进行加密处理，另外，调整网格变形的参数也能得到很好的效果。</p><p><img src="https://i.loli.net/2020/11/10/CPfls12ALJUYdXj.jpg" alt="fluent-1-03000.jpg"></p><h2 id="动态层铺法-dynamic-layering">动态层铺法（Dynamic Layering）</h2><p>对于棱柱型网格区域（六面体和或者三棱柱），可以应用动态层铺法。动态层铺法的中心思想是根据紧邻运动边界网格层高度的变化，添加或者减少动态层，即在边界发生运动时，如果紧邻边界的网格层高度增大到一定程度，就将其划分为两个网格层；如果网格层高度降低到一定程度，就将紧邻边界的两个网格层合并为一个层。</p><h3 id="几何模型-v2">几何模型</h3><p>几何模型示意图如图：</p><p><img src="https://i.loli.net/2020/12/01/Qx4sAHCabWoZT2u.png" alt="微信截图_20201111155232.png"></p><h3 id="网格划分-v2">网格划分</h3><p>在ICEM CFD中划分网格，需要进行两套网格划分然后进行网格拼接，这里均采用结构化网格划分方式。最需要注意的一点是要对各个边界进行清晰命名，这样在设置interface时就不会弄混。</p><p>侧边网格的最终划分及part设置如图，并save mesh as保存为sidemesh.uns。</p><p><img src="https://i.loli.net/2020/12/01/aQ3ukUbH5CxhrSF.png" alt="sidemeshpartcreate.png"></p><p><img src="https://i.loli.net/2020/12/01/B6kl8Og7hViyp1W.png" alt="sidemesh.png"></p><p>变形网格的划分需要多点步骤，其part设置为：</p><p><img src="https://i.loli.net/2020/12/01/9b4WS8MTisKVcoA.png" alt="slipmeshpartcreate.png"></p><p>点击blocking→create block，选择Type为2D planar，将part命名为slipmesh，点击apply。</p><p>点击blocking→split block，创建（±50，±50）四个几何点，并采用点划分的方式对block进行划分。</p><p><img src="https://i.loli.net/2020/12/01/QYIcqCzR2tf7eaV.png" alt="splitblock.png"></p><p><img src="https://i.loli.net/2020/12/01/S2rBVKe9tfvNzo1.png" alt="splitblock-2.png"></p><p>点击blocking→split block，点击ogrid block，点击select blcoks，选择小球周围的block，并中键确定，点击apply，完成ogrid block创建，如图所示。</p><p><img src="https://i.loli.net/2020/12/01/eC1jUTIruhNRsKw.png" alt="originblock.png"></p><p>点击blocking→associate，完成edge与curve之间的关联，在对小球边界进行关联时，需要勾选project vertices，然后点击apply即可，如图所示。</p><p><img src="https://i.loli.net/2020/12/01/XTDAEshcaPH6G4l.png" alt="微信截图_20201201161420.png"></p><p>点击blocking→Delete block，点击小球内部的block并删除。</p><p>点击blocking→Pre-Mesh Params，点击Edge Params，外围的边线节点分布数量均与其长度相等，切均匀分布，并勾选copy parameters。内部四条斜边的节点分布数量为58，且由内向外由密集到稀疏，参数设置如下：</p><p><img src="https://i.loli.net/2020/11/30/TdyYXVLecFgiNG6.png" alt="微信截图_20201130185917.png"></p><p>点击Pre-Mesh，进行网格划分如图，并save mesh as保存为slipmesh.uns。</p><p><img src="https://i.loli.net/2020/12/01/Vkv5pmu2NBeFz8D.png" alt="微信截图_20201201162310.png"></p><p>打开slipmesh.uns，点击file→mesh→open mesh，导入sidemesh.uns，点击merge，点击covert to unstruct mesh，随即导出网格layermesh.msh。</p><p><img src="https://i.loli.net/2020/12/01/51fgdT3hRDiqjPo.png" alt="微信截图_20201201162748.png"></p><h3 id="仿真计算-v2">仿真计算</h3><p>Fluent读入msh文件，scale网格设定合适的单位。将网格尺寸设为mm，显示尺寸设为m。选择基于压力的瞬态求解器，开启重力。点击菜单栏中的user-defined→functions→complied，编译并load之前保存好的UDF。</p><p>设置VOF多相流模型，设置body force formulation为Implicit Body Force。</p><p><img src="https://i.loli.net/2020/11/09/iUHK6ZN12IGpYaJ.png" alt="72b844c7c431d94fed9526cc0d63860.png"></p><p>选择湍流模型为标准k-epsilon模型，采用增强壁面函数。材料数据库中添加water-liquid。设置水为主相，空气为第二相。</p><p><img src="https://i.loli.net/2020/11/09/u4v6Pt2BVZQ1F5S.png" alt="bad6a24c971b8de8e0202cab220c1c7.png"></p><p>在boundary conditions将四个交界面设置为interface，顶端边界均设置为压力出口，静压为0。设置第二相空气相的体积分数为1。压力出口边界点击operating conditions，将参考压力边界设置为y=0.1m(即上边界所处的y轴坐标)，如图所示。</p><p><img src="https://i.loli.net/2020/12/02/Vj2GYMZvsDBEouF.png" alt="微信截图_20201201164355.png"></p><p><img src="https://i.loli.net/2020/12/02/OjTBqmtcJd7ewDQ.png" alt="微信截图_20201202102109.png"></p><p>在mesh interface中用Manual create对交界面进行配对，如图所示。</p><p><img src="https://i.loli.net/2020/12/02/WsaHJczgfq4PbyX.png" alt="微信截图_20201201164757.png"></p><p>激活动网格。在Dynamic mesh面板中，激活smoothing与Layering方法，同时勾选Six DOF选项。点击mesh methods 下的settings，选择spring layer。然后点击Layering，采用默认设置，然后点击ok。进入six dof setting面板，勾选Write Motion History，这样运动数据即可写入文本文件。设置完毕后关闭6DOF设置面板。</p><p>创建运动与变形区域，如图所示，指定运动区域为spherewall，勾选six dof options中的on选项。在mesh option 中设置层高为0.5mm，点击create。之后指定运动区域为slipmesh，勾选six dof options中的on选项和passive选项。点击create。接下来设置变形区域的顶端边界和底端边界为stationary类型，在mesh option 中设置层高为0.5mm，点击create。如图所示。</p><p><img src="https://i.loli.net/2020/12/02/RWtajDZfqbouJ7N.png" alt="微信截图_20201201170440.png"></p><p>之后右键cell registers→new→region，创建参数如下。</p><p><img src="https://i.loli.net/2020/12/02/EO8PjlMwNZSWv6I.png" alt="微信截图_20201202102546.png"></p><p>设置水的静压梯度。点击菜单栏中的user-defined→field functions→custom，将静压表达式P=rou×g×h写入，由于在这个例子中水面所处坐标为y=-0.24m，因此表达式写为998.2×9.8×(-0.24-y)，点击define即可定义该场函数，如图所示。</p><p><img src="https://i.loli.net/2020/12/02/DTyrohNKBGdEaA4.png" alt="微信截图_20201201215511.png"></p><p>设置完毕后，保存case与data文件。点击initialization，之后点击patch，设置参数如图所示，从而选出水域所在的网格。</p><p><img src="https://i.loli.net/2020/12/02/IxdpgJbDMoKkfsA.png" alt="微信截图_20201202103801.png"><br><img src="https://i.loli.net/2020/12/02/CwOg8Ph4aXloV2y.png" alt="微信截图_20201202103810.png"></p><p>设置水的静压梯度。设置参数如下，勾选field function，选择之前定义的场函数，对划分好的region进行patch(也就是对水域进行静压梯度设置)。</p><p><img src="https://i.loli.net/2020/12/02/wTzEofhq4mV6RD2.png" alt="微信截图_20201202103538.png"></p><p>点击results→graphics→contours，新建一个云图，选择各相的体积分数云图。如果显示如图，则水域patch无误。(由于网格划分的问题，初始气液界面处存在一些起伏，这主要是因为O-BLOCK划分造成的)</p><p><img src="https://i.loli.net/2020/12/02/87gU1GprZ2JkfO9.png" alt="微信截图_20201201170735.png"></p><p>另外，再新建一个压力云图，如果显示如图，则水的静压梯度设置无误。</p><p><img src="https://i.loli.net/2020/12/02/yndzmgQ3DsBJNRe.png" alt="微信截图_20201202104018.png"></p><p>点击calculation activities→autosave，设置每100步自动保存。点击calculation activities→solution animations，设置每100步自动保存动画文件。设置时间步长time size为0.0001s，时间步数time step为4000，即计算0.4s情况。设置内迭代数量为20，然后进行计算。</p><h3 id="仿真结果-v2">仿真结果</h3><p>下面分别给出了0.26s，0.32s，0.34s时刻下的体积分数云图，可见小球入水后形成了一个较长的入水空泡，并在液面处形成了明显的飞溅，空泡在不断拉长的过程中先是扩张然后颈缩，并在入水深度约1/2处完成了空泡深闭合。0.26s时，已经能观察到空泡趋于表面闭合，但是很不明显。同时，空泡的最大直径仅略大于小球直径，可见空泡的扩张也非常弱。在0.34s时甚至观察到了空泡多次闭合的现象。可见相对于网格重构法的入水空泡壁面，动态层铺方法计算的壁面更加光滑，对于自由边界的行为也有着较好的捕捉。</p><p><img src="https://i.loli.net/2020/12/02/C9j8gSvTa7yAWbd.jpg" alt="layermesh-1-02600.jpg"><br><img src="https://i.loli.net/2020/12/02/NfLygr5XaFskEPl.jpg" alt="layermesh-1-03200.jpg"><br><img src="https://i.loli.net/2020/12/02/ce9dn6I8GHDZyqu.jpg" alt="layermesh-1-03400.jpg"></p><h2 id="嵌套网格-overset-mesh">嵌套网格（Overset mesh）</h2><p>嵌套网格（overset）又称重叠网格，该网格由两部分组成：包含主要流体区域的背景网格（background），围绕部件的构建的单独的组件网格（component）。此时，部件网格的外边界指定为overset（特有的边界类型），其他的边界和通常的网格则没有区别。相比于传统的MDM动网格方式，嵌套网格有以下优势：</p><ul><li><p>更简单的网格划分方式（边界更为简单）</p></li><li><p>当算例需要更改网格布局的时候，仅需要添加/删除部件网格即可</p></li><li><p>当涉及到边界运动的时候，通常仅需要部件网格独立进行运动即可</p></li><li><p>不会出现负体积</p></li><li><p>网格质量不随边界移动而变化</p></li><li><p>不需要思考复杂的边界运动逻辑</p></li></ul><p>总的来讲，嵌套网格的最大特点，就是让流体仿真变得更为简单和快捷，提高流体工程师的工作效率。</p><h3 id="几何模型-v3">几何模型</h3><p>背景网格（background）如图所示：</p><p><img src="https://i.loli.net/2020/11/29/dMHmQhpUC43GgnD.png" alt="背景网格.png"></p><p>组件网格（component）如图所示：</p><p><img src="https://i.loli.net/2020/11/29/qKaWBe18kwnm7DV.png" alt="前景网格.png"></p><h3 id="网格划分-v3">网格划分</h3><p>在ICEM CFD中划分网格，这里对背景网格和组件网格均采用结构化网格划分方式。由于背景网格划分十分简单，因此这里只对前景网格的O-BLOCK做一点记录。</p><p>在ICEM中建立好几何模型后（记得删除小球内部的面）进行part创建，将外围4条边命名为OVERSETWALL，将小球边界命名为SPHEREWALL，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/P9fn8UdSuNoXICE.png" alt="part创建.png"></p><p>点击blocking→create block，选择Type为2D planar，将part命名为frontmesh，点击apply。</p><p><img src="https://i.loli.net/2020/11/30/YCqJikjwOvQ6zul.png" alt="block create.png"></p><p>点击blocking→split block，点击ogrid block，点击select blcoks，选择屏幕中的block，并中键确定，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/a4UjZGJrTchuOW9.png" alt="微信截图_20201130173303.png"></p><p>点击apply，完成ogrid block创建，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/q6MYuIRDZEP72OU.png" alt="微信截图_20201130173348.png"></p><p>点击blocking→associate，完成edge与curve之间的关联，在对小球边界进行关联时，需要勾选project vertices，然后点击apply即可，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/kXU9TGFYrO2JxhS.png" alt="微信截图_20201130173700.png"></p><p><img src="https://i.loli.net/2020/11/30/g2Xw6NCMp7dSL9f.png" alt="微信截图_20201130173803.png"></p><p>点击blocking→Delete block，点击小球内部的block并删除，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/djOJA9BNkHe3RtS.png" alt="微信截图_20201130185507.png"></p><p>点击blocking→Pre-Mesh Params，点击Edge Params，外围4条边节点分布数量均为100，切均匀分布，并勾选copy parameters。内部四条斜边的节点分布数量为58，且由内向外由密集到稀疏，参数设置如下：</p><p><img src="https://i.loli.net/2020/11/30/TdyYXVLecFgiNG6.png" alt="微信截图_20201130185917.png"></p><p>点击Pre-Mesh，进行网格划分如图。</p><p><img src="https://i.loli.net/2020/11/30/sUK48inIAZRHMQc.png" alt="微信截图_20201130190050.png"></p><p>右键Pre-Mesh，点击covert to unstruct mesh，随即导出前景网格frontmesh.msh。此外，对背景网格进行划分，并保存为background.msh。</p><h3 id="仿真计算-v3">仿真计算</h3><p>Fluent读入background.msh文件，点击Append→append case file，读入frontmesh.msh文件，scale网格设定合适的单位。将网格尺寸设为mm，显示尺寸设为m。选择基于压力的瞬态求解器，开启重力。点击菜单栏中的user-defined→functions→complied，编译并load之前保存好的UDF。</p><p><img src="https://i.loli.net/2020/11/30/uL1zAUOt7ECerBn.png" alt="01fcbcde1f7ecf44183f017469d3ac7.png"></p><p>设置VOF多相流模型，设置body force formulation为Implicit Body Force。</p><p><img src="https://i.loli.net/2020/11/09/iUHK6ZN12IGpYaJ.png" alt="72b844c7c431d94fed9526cc0d63860.png"></p><p>选择湍流模型为标准k-epsilon模型，采用增强壁面函数。材料数据库中添加water-liquid。设置水为主相，空气为第二相。</p><p><img src="https://i.loli.net/2020/11/09/u4v6Pt2BVZQ1F5S.png" alt="bad6a24c971b8de8e0202cab220c1c7.png"></p><p>点击cell zone conditions→frontmesh，在弹出的窗口中勾选Mesh Motion，如图所示。</p><p><img src="https://i.loli.net/2020/11/30/UeTi9LOD7253IWt.png" alt="微信截图_20201130200435.png"></p><p>本例中需要设置的边界条件为出口边界。该边界设置为压力出口，静压为0。设置第二相空气相的体积分数为1。</p><p><img src="https://i.loli.net/2020/11/30/USdzC52bLKF3Ajx.png" alt="微信截图_20201130200801.png"></p><p>将oversetwall边界条件type设为overset，其余边界条件均为壁面。</p><p>双击overset interfaces，弹出的窗口中命名为oversetinterface，选择background和frontmesh，点击create即可。</p><p><img src="https://i.loli.net/2020/11/30/WtOeBAZuI3gVFpC.png" alt="微信截图_20201130201224.png"></p><p>激活动网格。在Dynamic mesh面板中，激活smoothing方法，同时勾选Six DOF选项。进入six dof setting面板，勾选Write Motion History，这样运动数据即可写入文本文件。设置完毕后关闭6DOF设置面板。创建运动区域，如图所示，指定运动区域为spherewall，勾选six dof options中的on选项。点击create。</p><p><img src="https://i.loli.net/2020/11/30/lretZVDAsMp3nPT.png" alt="微信截图_20201130201415.png"></p><p>之后指定运动区域为frontmesh，勾选six dof options中的on选项和passive选项。点击create。</p><p><img src="https://i.loli.net/2020/11/30/i8W1NLFpePaBuxU.png" alt="微信截图_20201130201534.png"></p><p>之后右键cell registers→new→region，创建参数如下。</p><p><img src="https://i.loli.net/2020/12/02/EO8PjlMwNZSWv6I.png" alt="微信截图_20201202102546.png"></p><p>设置水的静压梯度。点击菜单栏中的user-defined→field functions→custom，将静压表达式P=rou×g×h写入，由于在这个例子中水面所处坐标为y=-0.24m，因此表达式写为998.2×9.8×(-0.24-y)，点击define即可定义该场函数，如图所示。</p><p><img src="https://i.loli.net/2020/12/02/DTyrohNKBGdEaA4.png" alt="微信截图_20201201215511.png"></p><p>设置完毕后，保存case与data文件。点击initialization，之后点击patch，设置参数如动态层铺一节所示，从而选出水域所在的网格并patch水域的静压梯度。</p><p>点击results→graphics→contours，新建一个云图，选择各相的体积分数云图。如果显示如图，则patch无误。</p><p><img src="https://i.loli.net/2020/11/30/E3dhojsz1mWaqNR.png" alt="微信截图_20201130202117.png"></p><p>另外，再新建一个压力云图，如果显示如图，则水的静压梯度设置无误。</p><p><img src="https://i.loli.net/2020/12/02/yndzmgQ3DsBJNRe.png" alt="微信截图_20201202104018.png"></p><p>点击calculation activities→autosave，设置每100步自动保存。点击calculation activities→solution animations，设置每100步自动保存动画文件。设置时间步长time size为0.0001s，时间步数time step为4000，即计算0.4s情况。设置内迭代数量为20，然后进行计算。</p><h3 id="仿真结果-v3">仿真结果</h3><p>下面分别给出了0.26s，0.32s，0.34s时刻下的体积分数云图，可见小球入水后形成了一个较长的入水空泡，并在液面处形成了明显的飞溅，空泡在不断拉长的过程中先是扩张然后颈缩，并在入水深度约1/2处完成了空泡深闭合。在这个例子中，空泡的最大直径接近于两倍的小球直径，可见空泡的扩张速度较高，但是空泡表面闭合现象没有观察到，0.34s时可以观察到初生的沃辛顿射流。可见相对于网格重构法的入水空泡壁面，重叠网格方法计算的壁面更加光滑，对于自由边界的行为也有着较好的捕捉。</p><p><img src="https://i.loli.net/2020/11/30/smtluYhVBE7UQck.jpg" alt="frontmesh-1-02600.jpg"><br><img src="https://i.loli.net/2020/11/30/hiYLIHpzPEUuJTX.jpg" alt="frontmesh-1-03200.jpg"><br><img src="https://i.loli.net/2020/11/30/ujhD1gNy6GqFYBP.jpg" alt="frontmesh-1-03400.jpg"></p><h2 id="参考链接">参考链接</h2><p><a href="http://blog.sina.com.cn/s/blog_599d8faa010121yc.html" target="_blank" rel="noopener">利用6DOF模型计算小球自空气中跌落水中</a></p><p><a href="https://blog.csdn.net/MouGang/article/details/108274611" target="_blank" rel="noopener">fluent问题之结果云图显示总有网格</a></p><p><a href="https://mp.weixin.qq.com/s/qBMZsAh3nlABQnIsfr6p_A" target="_blank" rel="noopener">【案例分享】6DOF动网格</a></p><p><a href="https://mp.weixin.qq.com/s/4VFC3v9rajq3HmqH1Dvmiw" target="_blank" rel="noopener">【Fluent案例】23：重叠网格</a></p><p><a href="https://wenku.baidu.com/view/b5fd2194daef5ef7ba0d3c10.html" target="_blank" rel="noopener">FLUENT动网格之铺层应用</a></p><p><a href="https://wenku.baidu.com/view/305ae919ba1aa8114431d9a0.html" target="_blank" rel="noopener">FLUENT动网格之铺层应用1</a></p><p><a href="https://mp.weixin.qq.com/s/8SbtXPU1YXoVd0m_0fCAYw" target="_blank" rel="noopener">Fluent动网格【3】：运动指定UDF</a></p><h2 id="作者">作者</h2><p>Yang Hua、Shan Gao、Zhuoyue Li、Yilan Yu</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初学者在进行相关流体仿真时，小球入水往往是一个非常经典的案例。重要的是，许多研究者曾对小球入水进行了大量的实验研究，保留了丰富的实验成果。这使得人们在进行入水领域的仿真工作时，往往利用小球入水来进行数值算法的验证。本文将利用ANSYS Fluent中的动网格局部重构法（Local Remeshing），动态层铺法（Dynamic Layering）以及嵌套网格（Overset mesh）三种手段对小球入水进行简单的仿真模拟。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>鼠标点击获取图像/视频中某点像素坐标</title>
    <link href="https://ink-bottle.github.io/2020/10/24/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E5%9B%BE%E5%83%8F%E4%B8%AD%E6%9F%90%E7%82%B9%E5%83%8F%E7%B4%A0%E5%9D%90%E6%A0%87/"/>
    <id>https://ink-bottle.github.io/2020/10/24/鼠标点击获取图像中某点像素坐标/</id>
    <published>2020-10-24T03:32:09.000Z</published>
    <updated>2020-10-24T10:17:35.978Z</updated>
    
    <content type="html"><![CDATA[<p>在对图像进行精确裁剪分割时，或者是想要确定图片中某个特征点的具体位置时，往往我们希望得到鼠标点击处的像素点坐标。这样做还有一个好处，如果我们想要快速得到拍摄的画面中一个物体的运动轨迹点数据的话，通过获得不同帧画面的物体所在的像素点坐标即可。</p><a id="more"></a><p>实现这个功能需要用到Opencv的鼠标回调事件，这基于OpenCV的内置函数cv2.setMouseCallback()，官方文档是这样写的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># mouse callback function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_circle</span><span class="params">(event,x,y,flags,param)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> event == cv2.EVENT_LBUTTONDBLCLK:</span><br><span class="line">        cv2.circle(img,(x,y),<span class="number">100</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a black image, a window and bind the function to window</span></span><br><span class="line">img = np.zeros((<span class="number">512</span>,<span class="number">512</span>,<span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.namedWindow(<span class="string">'image'</span>)</span><br><span class="line">cv2.setMouseCallback(<span class="string">'image'</span>,draw_circle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    cv2.imshow(<span class="string">'image'</span>,img)</span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(<span class="number">20</span>) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>这段代码的主要流程是<strong>如果检测到鼠标事件，则在鼠标双击的坐标处画一个大小为100的圆</strong>，因此由此我们可以得到鼠标点击处的像素坐标。</p><p>对于单张图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img1=cv2.imread(<span class="string">'wallhaven-mdjwjy.jpg'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#像素点坐标初定义</span></span><br><span class="line">pro_x = []</span><br><span class="line">pro_y = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义鼠标点击事件并将点击坐标输入数组</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mouse_img_cod</span><span class="params">(event, cod_x, cod_y, flags, param)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> event == cv2.EVENT_LBUTTONDOWN:</span><br><span class="line">        xy = <span class="string">"%d,%d"</span> % (cod_x,cod_y)</span><br><span class="line">        cv2.circle(img1, (cod_x,cod_y), <span class="number">1</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), thickness = <span class="number">-1</span>)</span><br><span class="line">        cv2.putText(img1, xy, (cod_x,cod_y), cv2.FONT_HERSHEY_PLAIN,<span class="number">1.0</span>, (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>), thickness = <span class="number">1</span>) <span class="comment">#将坐标值放在图片内</span></span><br><span class="line">        cv2.imshow(<span class="string">"image"</span>, img1)</span><br><span class="line">        pro_x.append(cod_x)</span><br><span class="line">        pro_y.append(cod_y)</span><br><span class="line">        </span><br><span class="line">cv2.namedWindow(<span class="string">'image'</span>, cv2.WINDOW_AUTOSIZE) <span class="comment">#创建一个名为image的窗口</span></span><br><span class="line">cv2.setMouseCallback(<span class="string">"image"</span>, mouse_img_cod) <span class="comment">#鼠标事件回调</span></span><br><span class="line">cv2.imshow(<span class="string">'image'</span>,img1) <span class="comment">#显示图片</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>) <span class="comment">#按下任意键退出窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">print(pro_x[<span class="number">0</span>],pro_y[<span class="number">0</span>]) <span class="comment">#打印坐标值</span></span><br></pre></td></tr></table></figure><p>运行后效果如图：</p><p><img src="https://i.loli.net/2020/10/24/fdG739S4ji6Lqmb.png" alt="imagepoint.png"></p><p>对于一系列图片：</p><p>想要提取视频中的某个特征点的像素点坐标的话，也可以通过人为的鼠标点击获得这些坐标数据，在进行这个操作的前提是已经将视频每一帧转成图片。在这里我截取了辉告中会长向藤原书记学习唱歌的片段，主要想要得到的是得到藤原书记手指指尖挥动的轨迹坐标点。</p><p>运行程序的时候只需要鼠标点击藤原书记指尖位置，然后按下任意键切换下一帧图片，继续点击，直至循环结束，指尖挥动的轨迹坐标点则存入trajectory_cod列表中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入所需要的库</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img_num = []</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unlock_movie</span><span class="params">(path)</span>:</span></span><br><span class="line"><span class="comment"># 将视频转换成图片</span></span><br><span class="line"><span class="comment"># path: 视频路径</span></span><br><span class="line">  cap = cv2.VideoCapture(path)</span><br><span class="line">  suc = cap.isOpened()  <span class="comment"># 是否成功打开</span></span><br><span class="line">  frame_count = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> suc:</span><br><span class="line">      frame_count += <span class="number">1</span></span><br><span class="line">      suc, frame = cap.read()</span><br><span class="line">      params = []</span><br><span class="line">      params.append(<span class="number">2</span>)  <span class="comment"># params.append(1)</span></span><br><span class="line">      <span class="keyword">if</span> frame_count % <span class="number">3</span> == <span class="number">0</span>:  <span class="comment"># 调整帧数</span></span><br><span class="line">          <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">              cv2.imwrite(<span class="string">'./output/video1_'</span> + str(frame_count) + <span class="string">".jpg"</span>, frame, params)</span><br><span class="line">              img_num.append(frame_count) <span class="comment"># 得到图片后缀名编号</span></span><br><span class="line"></span><br><span class="line">  cap.release()</span><br><span class="line">  print(<span class="string">'unlock movie: '</span>, frame_count)</span><br><span class="line"></span><br><span class="line">videoFile = <span class="string">'书记教会长唱歌.mp4'</span> <span class="comment"># 读取视频文件</span></span><br><span class="line">unlock_movie(videoFile)  <span class="comment"># 视频转图片</span></span><br><span class="line"></span><br><span class="line">star_num = img_num[<span class="number">0</span>] <span class="comment">#图片开始编号</span></span><br><span class="line">end_num = img_num[len(img_num)<span class="number">-1</span>] <span class="comment">#图片结束编号</span></span><br><span class="line">file_name = <span class="string">'video1_'</span> <span class="comment">#图片前缀名</span></span><br><span class="line">trajectory_cod = np.zeros( ((end_num-star_num)//<span class="number">3</span>+<span class="number">1</span>,<span class="number">2</span>) ) <span class="comment">#初始定义轨迹坐标数组</span></span><br><span class="line">cod_i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#头部轨迹点手动提取</span></span><br><span class="line"><span class="keyword">for</span> num_p <span class="keyword">in</span> range(star_num,end_num,<span class="number">3</span>):</span><br><span class="line">    <span class="comment">#像素点坐标初定义</span></span><br><span class="line">    pro_x = []</span><br><span class="line">    pro_y = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#定义鼠标点击事件并将点击坐标输入数组</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mouse_img_cod</span><span class="params">(event, cod_x, cod_y, flags, param)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> event == cv2.EVENT_LBUTTONDOWN:</span><br><span class="line">            xy = <span class="string">"%d,%d"</span> % (cod_x,cod_y)</span><br><span class="line">            cv2.circle(img1, (cod_x,cod_y), <span class="number">1</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), thickness = <span class="number">-1</span>)</span><br><span class="line">            cv2.putText(img1, xy, (cod_x,cod_y), cv2.FONT_HERSHEY_PLAIN,<span class="number">1.0</span>, (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>), thickness = <span class="number">1</span>)</span><br><span class="line">            cv2.imshow(<span class="string">"image"</span>, img1)</span><br><span class="line">            pro_x.append(cod_x)</span><br><span class="line">            pro_y.append(cod_y)</span><br><span class="line">    </span><br><span class="line">    file_read = <span class="string">'./output/video1_'</span>+str(num_p)+<span class="string">'.jpg'</span> <span class="comment">#图片路径</span></span><br><span class="line">    img1 = cv2.imread(file_read) <span class="comment">#读入图片</span></span><br><span class="line">    cv2.namedWindow(<span class="string">'image'</span>, cv2.WINDOW_AUTOSIZE) <span class="comment">#创建一个名为image的窗口</span></span><br><span class="line">    cv2.setMouseCallback(<span class="string">"image"</span>, mouse_img_cod) <span class="comment">#鼠标事件回调</span></span><br><span class="line">    cv2.imshow(<span class="string">'image'</span>,img1) <span class="comment">#显示图片</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows() </span><br><span class="line">    print(pro_x[<span class="number">0</span>],pro_y[<span class="number">0</span>]) <span class="comment">#打印坐标值</span></span><br><span class="line">    trajectory_cod[cod_i,<span class="number">0</span>] = pro_x[<span class="number">0</span>]</span><br><span class="line">    trajectory_cod[cod_i,<span class="number">1</span>] = pro_y[<span class="number">0</span>]</span><br><span class="line">    cod_i = cod_i+<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">save_file = file_name + <span class="string">'藤原书记手指指尖挥动的轨迹坐标.txt'</span></span><br><span class="line">np.savetxt(save_file,trajectory_cod)</span><br></pre></td></tr></table></figure><p>运行后效果如图：</p><p><img src="https://i.loli.net/2020/10/24/a6V95XyQhrg2cRS.gif" alt="tengyuanshuji.gif"></p><h2 id="参考链接">参考链接</h2><p><a href="https://blog.csdn.net/qq_41360787/article/details/103258773" target="_blank" rel="noopener">python-利用OpenCV获取图像中鼠标点击处像素点的坐标</a></p><p><a href="https://www.cnblogs.com/YanQing1998/p/11910030.html" target="_blank" rel="noopener">OpenCV/python读取，显示，保存图像</a></p><p><a href="https://www.jianshu.com/p/b2dec074d270" target="_blank" rel="noopener">Python+cv2 视频转换为图片 与 图片转换为视频</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在对图像进行精确裁剪分割时，或者是想要确定图片中某个特征点的具体位置时，往往我们希望得到鼠标点击处的像素点坐标。这样做还有一个好处，如果我们想要快速得到拍摄的画面中一个物体的运动轨迹点数据的话，通过获得不同帧画面的物体所在的像素点坐标即可。&lt;/p&gt;
    
    </summary>
    
      <category term="资源" scheme="https://ink-bottle.github.io/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>远程控制软件</title>
    <link href="https://ink-bottle.github.io/2020/07/25/Remote-control-software/"/>
    <id>https://ink-bottle.github.io/2020/07/25/Remote-control-software/</id>
    <published>2020-07-25T03:32:09.000Z</published>
    <updated>2020-07-28T02:18:56.785Z</updated>
    
    <content type="html"><![CDATA[<p>每当回到住处一个电话打过来告诉你还有工作需要修改的时候，当外面下着倾盆大雨不方便出门却要工作时，当出差在外想要远程调用工作电脑上的文件时，当有人发消息给你需要你帮他处理电脑上出现的某个问题时，这些时候就会需要远程操控一台不在身边的电脑，现在市场上已经有很多款不同的远程控制软件，它们之间各有千秋，今天对这些软件做一个总结和评价。</p><a id="more"></a><h2 id="teamviewer">TeamViewer</h2><p>这款软件估计是很多人第一时间就想到的远程操控软件了，它的优点非常明显，只需两个设备同时开启 TeamViewer 即可，而且也不需要安装，可以跨平台使用，而且最重要的一点是，个人使用且非商业用途时，这个软件是可以免费使用的。</p><p>但是其缺点就是它会检测你是否商用，如果被检测为商用还是会被限制使用，而商业版价格又很贵。且teamviewer服务器在国外，网络服务不太稳定，可能碰到几分钟就断线一次的情况。</p><p>官网地址：<a href="https://www.teamviewer.cn/cn/" target="_blank" rel="noopener">TeamViewer</a></p><h2 id="windows-快速助手">Windows 快速助手</h2><p>使用快捷键Win + S，打开 Win10 自带的搜索功能，搜索「快速助手」并打开。在打开的页面中，可以看到「获取协助」和「提供协助」的选项，如果你的电脑遇到了问题，需要他人协助解决，可以使用获取协助，协助你解决问题的人则使用提供协助。提供协助的人使用微软帐号登录之后，可以获得一个安全代码，将其分享给需要帮助的人，安全代码的有效期为 10 分钟。获取协助的人输入安全代码后，提供协助的人可选择完全控制对方的电脑，也可选择在不完全控制的情况下查看对方的屏幕。</p><p><img src="https://i.loli.net/2020/07/25/PAibfmrv1RJDXTO.png" alt="微信图片_20200725130640.png"></p><p>快速助手不要求连接的两台电脑处于同个局域网下，使用起来也比较简单，唯一的缺点在于延迟较高，不够流畅。</p><h2 id="windows-远程桌面连接">Windows 远程桌面连接</h2><p>远程桌面连接，是Win10 专业版系统自带的远程连接功能，所以如果是其它版本的win10则不能使用这一功能。对于这个功能，微软在移动端上还推出了相应的 App：Microsoft 远程桌面，支持 iOS 和 Android，可以实现手机控制电脑。</p><p>但是该功能要求两台电脑都处在同一局域网下，如果你想使用这个功能连接家里和公司的电脑，则需要先进行内网穿透，才能实现真正意义上的远程连接。</p><h2 id="anydesk">AnyDesk</h2><p>AnyDesk是一个小巧实用的远程桌面控制软件，适用于多种平台和操作系统，使用简单，个人用户免费，目前还没有爆出隐私泄露问题和安全问题。但是由于服务器在国外，因此访问链接速度特别不友好，卡顿现象十分明显。</p><p>官网地址：<a href="https://anydesk.com/zhs" target="_blank" rel="noopener">AnyDesk</a><br><img src="https://i.loli.net/2020/07/25/T8jEiXuIQ2GMfYq.png" alt="微信图片_20200725131743.png"></p><h2 id="向日葵">向日葵</h2><p>向日葵远程控制软件支持多平台，而且跨网络，不用关心计算机IP地址之类的问题，使用阿里云服务器，链接速度尚可，现在最新版本还可以电脑控制手机。但是缺点是需要注册 Oray账号，强制登录使用，且免费版限速300Kbps。</p><p>官网地址：<a href="https://sunlogin.oray.com/" target="_blank" rel="noopener">向日葵</a></p><h2 id="qq-远程桌面">QQ 远程桌面</h2><p>腾讯QQ的附带产物，只要双方都安装了QQ或者TIM，加了好友，就能开始远程操作，非常方便，不用关心计算机IP地址之类的问题，只要是QQ好友，对方实时同意「被远程操作」，立刻就能动手。但是缺点是只能支持Windows，并且链接体验感人，卡到崩溃。<br><img src="https://i.loli.net/2020/07/25/T5VUmaKkoGIsQOl.png" alt="微信图片_20200725133445.png"></p><h2 id="todesk">ToDesk</h2><p>ToDesk 是一款新入局的电脑桌面远程控制软件，主打「流畅」以及「个人免费」的特点。软件的体积很小仅 3MB 左右，但麻雀虽小五脏俱全，ToDesk 的功能还是足够实用的：远程桌面控制、文件传输、语音沟通、文字聊天都一应俱全。不必考虑受控的机器是否位于内网、有无公网 IP、端口映射或者网络防火墙，操作延迟低。缺点是现在还处于测试阶段，支持windows和ios，但现在还不支持Android，MacOS，Linux等平台。</p><p>官网地址：<a href="https://www.todesk.com/" target="_blank" rel="noopener">ToDesk</a></p><p><img src="https://i.loli.net/2020/07/25/WU9pirqkzfjTGwQ.png" alt="微信图片_20200725133726.png"></p><p>从当前使用体验来看，ToDesk是最让人用的舒服的一款了。当然，除了以上介绍的远程控制软件，还有<a href="https://www.zerotier.com/download/" target="_blank" rel="noopener">ZeroTier</a>，<a href="https://www.radmin.cn/" target="_blank" rel="noopener">Radmin</a>，<a href="https://www.nomachine.com/" target="_blank" rel="noopener">nomachine</a>，<a href="https://www.cloudberry.com/" target="_blank" rel="noopener">CloudBerry Remote Assistance</a>等等软件，如果对以上软件都不太满意的话可以试试这些远程控制软件。</p><h2 id="参考链接">参考链接</h2><p><a href="https://www.zhihu.com/question/20780129/answer/1316886104" target="_blank" rel="noopener">请推荐好的远程控制软件？</a><br><a href="https://www.zhihu.com/question/372188717/answer/1345789801" target="_blank" rel="noopener">有哪些比较好用的远程控制软件？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每当回到住处一个电话打过来告诉你还有工作需要修改的时候，当外面下着倾盆大雨不方便出门却要工作时，当出差在外想要远程调用工作电脑上的文件时，当有人发消息给你需要你帮他处理电脑上出现的某个问题时，这些时候就会需要远程操控一台不在身边的电脑，现在市场上已经有很多款不同的远程控制软件，它们之间各有千秋，今天对这些软件做一个总结和评价。&lt;/p&gt;
    
    </summary>
    
      <category term="资源" scheme="https://ink-bottle.github.io/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>端午小记</title>
    <link href="https://ink-bottle.github.io/2020/06/25/Dragon-Boat-Festival/"/>
    <id>https://ink-bottle.github.io/2020/06/25/Dragon-Boat-Festival/</id>
    <published>2020-06-25T11:11:27.000Z</published>
    <updated>2020-06-25T13:58:15.545Z</updated>
    
    <content type="html"><![CDATA[<p>不论有没有吃到粽子，有没有收到祝福，还是祝愿看到这篇博客的你端午节安康。</p><a id="more"></a><p><img src="https://i.loli.net/2020/06/25/l2ME9ASg6wYHBf7.png" alt="微信图片_20200625212547.png"></p><p>时间一向过的很快，2020年转眼间已经被消耗了一半多，因为疫情的原因，这半年里最多的生活场景都是发生在家里。谁能想到，寒假回家过年时拖着装有冬天衣服的箱子被拖回西安的时候，已经是炎炎夏日了呢。</p><p>在之前的学生生涯里，抱怨的最多的常常就是假期太短，而作业任务又太多，常常想着的就是当自己有了足够的时间后会去做自己喜欢的事情，比如毫无顾忌的玩游戏刷电影，学习一项乐器或者其他技能，手工制作自己构思很久的项目，跑去河边钓鱼等等能够让生活变得五彩斑斓的事情。可当漫长的假期真的降临的时候，毫无计划的我反而提不起做那些事情的兴趣，慵懒的一躺往往可以很成功地度过一整天。这种现状的结果就是我没有积攒任何经历和技能，但是积攒了不少重量，在肥宅的路上越走越远。</p><p>这场疫情对于学生来说，影响最直观的还是上课的方式，大家都开始线上学习，即便是现在已经返校的也不例外。就在昨天晚上，我刚刚完成了一场线上考试，电脑端在QQ群里监考老师分享试题屏幕，手机端提前半小时进腾讯会议开摄像头确保拍到整个身体，桌面以及电脑屏幕。我本来手机开始是有90%的电量，可没想到三个小时过后考试一结束电量就只剩下7%了，还好足以让我拍下写了6张的答题纸并上传发给监考老师，以后再有这样的情况还是给手机插上充电线吧，说不定考着考着自己就突然下线了也说不定。</p><p>由于我原本住在校外公寓，因此现在迟迟没有收到返校通知，眼睁睁看着这个学期到了期末，估计暑假来临前都无法正式返校了。</p><p><img src="https://i.loli.net/2020/06/25/8HKyCxV5DawWptn.png" alt="Tifa.png"><br><img src="https://i.loli.net/2020/06/25/EMtS96nyXNIuihO.png" alt="Arieth.png"></p><p>最近一段时间除了日常的学习和工作，还云通关了最终幻想7重制版（我工作后再给自己买一个PS5吧😅），温柔坚强的蒂法和活泼古怪的爱丽丝真的太让人心动了，不仅如此，蒂法与爱丽丝的主题曲也是百听不厌。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26436517&auto=1&height=66"></iframe><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26436530&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不论有没有吃到粽子，有没有收到祝福，还是祝愿看到这篇博客的你端午节安康。&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>计算流体力学总结</title>
    <link href="https://ink-bottle.github.io/2020/05/15/Computational-Fluid-Dynamics/"/>
    <id>https://ink-bottle.github.io/2020/05/15/Computational-Fluid-Dynamics/</id>
    <published>2020-05-15T10:38:33.000Z</published>
    <updated>2020-05-17T07:32:14.468Z</updated>
    
    <content type="html"><![CDATA[<p>最近正在学习偏微分方程数值解法这门课程，发现其中很多内容在《计算流体力学入门》中存在较多的重叠部分，知识点有点多，故对所学习的进行一个大概的整理。</p><a id="more"></a><h2 id="流体力学控制方程">流体力学控制方程</h2><h3 id="黏性流动方程-n-s方程">黏性流动方程（N-S方程）</h3><p>对于非定常、三维可压缩黏性流动，其控制方程为<br><strong>连续方程</strong><br>非守恒型<br>$$\frac{D\rho }{Dt}+ \rho \boldsymbol{\nabla} \cdot \boldsymbol{V}= 0$$<br>守恒型<br>$$\frac{\partial \rho }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \boldsymbol{V} \right )= 0$$</p><p><strong>动量方程</strong><br>非守恒型<br>x方向表达式：<br>\begin{align}<br>\rho \frac{Du}{Dt}= -\frac{\partial p}{\partial x}+\frac{\partial \tau _{xx}}{\partial x}+\frac{\partial \tau _{yx}}{\partial y}+\frac{\partial \tau _{zx}}{\partial z}+\rho f_{x}<br>\end{align}</p><p>y方向表达式：<br>\begin{align}<br>\rho \frac{D\upsilon }{Dt}= -\frac{\partial p}{\partial y}+\frac{\partial \tau _{xy}}{\partial x}+\frac{\partial \tau _{yy}}{\partial y}+\frac{\partial \tau _{zy}}{\partial z}+\rho f_{y}<br>\end{align}</p><p>z方向表达式：<br>\begin{align}<br>\rho \frac{D\omega  }{Dt}= -\frac{\partial p}{\partial z}+\frac{\partial \tau _{xz}}{\partial x}+\frac{\partial \tau _{yz}}{\partial y}+\frac{\partial \tau _{zz}}{\partial z}+\rho f_{z}<br>\end{align}</p><p>守恒型<br>x方向表达式：<br>\begin{align}<br>\frac{\partial\left (  \rho u\right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho u \boldsymbol{V}\right )= -\frac{\partial p}{\partial x}+\frac{\partial \tau _{xx}}{\partial x}+\frac{\partial \tau _{yx}}{\partial y}+\frac{\partial \tau _{zx}}{\partial z}+\rho f_{x}<br>\end{align}</p><p>y方向表达式：<br>\begin{align}<br>\frac{\partial \left (  \rho \upsilon\right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \upsilon  \boldsymbol{V}\right )= -\frac{\partial p}{\partial y}+\frac{\partial \tau _{xy}}{\partial x}+\frac{\partial \tau _{yy}}{\partial y}+\frac{\partial \tau _{zy}}{\partial z}+\rho f_{y}<br>\end{align}</p><p>z方向表达式：<br>\begin{align}<br>\frac{\partial \left ( \rho \omega  \right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \omega   \boldsymbol{V}\right )= -\frac{\partial p}{\partial z}+\frac{\partial \tau _{xz}}{\partial x}+\frac{\partial \tau _{yz}}{\partial y}+\frac{\partial \tau _{zz}}{\partial z}+\rho f_{z}<br>\end{align}</p><p><strong>能量方程</strong><br>非守恒型<br>$$<br>\begin{align}<br>\rho \frac{D}{Dt}\left ( e+\frac{V^{2}}{2} \right )&amp;=\rho \dot{q}+\frac{\partial }{\partial x}\left ( K\frac{\partial T}{\partial x} \right )+\frac{\partial }{\partial y}\left ( K\frac{\partial T}{\partial y} \right )+\frac{\partial }{\partial z}\left ( K\frac{\partial T}{\partial z} \right )-\frac{\partial \left ( up \right )}{\partial x}-\frac{\partial \left ( \upsilon p \right )}{\partial y}-\frac{\partial \left ( \omega  p \right )}{\partial z}\\<br>&amp;+\frac{\partial \left ( u\tau _{xx} \right )}{\partial x}+\frac{\partial \left ( u\tau _{yx} \right )}{\partial y}+\frac{\partial \left ( u\tau _{zx} \right )}{\partial z}+\frac{\partial \left ( \upsilon \tau _{xy} \right )}{\partial x}+\frac{\partial \left ( \upsilon \tau _{yy} \right )}{\partial y}+\frac{\partial \left ( \upsilon \tau _{zy} \right )}{\partial z}+\frac{\partial \left ( \omega  \tau _{xz} \right )}{\partial x}\\<br>&amp;+\frac{\partial \left ( \omega  \tau _{yz} \right )}{\partial y}+\frac{\partial \left ( \omega  \tau _{zz} \right )}{\partial z}+\rho \boldsymbol{f}\cdot \boldsymbol{V}<br>\end{align}<br>$$</p><p>守恒型<br>$$<br>\begin{align}<br>\frac{\partial }{\partial t}\left [ \rho \left ( e+\frac{V^{2}}{2}\right ) \right ]+\boldsymbol{\nabla}\cdot \left [ \rho \left ( e+\frac{V^{2}}{2}\right )\boldsymbol{V} \right ]&amp;=\rho \dot{q}+\frac{\partial }{\partial x}\left ( K\frac{\partial T}{\partial x} \right )+\frac{\partial }{\partial y}\left ( K\frac{\partial T}{\partial y} \right )+\frac{\partial }{\partial z}\left ( K\frac{\partial T}{\partial z} \right )-\frac{\partial \left ( up \right )}{\partial x}\\<br>&amp;-\frac{\partial \left ( \upsilon p \right )}{\partial y}-\frac{\partial \left ( \omega  p \right )}{\partial z}+\frac{\partial \left ( u\tau _{xx} \right )}{\partial x}+\frac{\partial \left ( u\tau _{yx} \right )}{\partial y}+\frac{\partial \left ( u\tau _{zx} \right )}{\partial z}+\frac{\partial \left ( \upsilon \tau _{xy} \right )}{\partial x}\\<br>&amp;+\frac{\partial \left ( \upsilon \tau _{yy} \right )}{\partial y}+\frac{\partial \left ( \upsilon \tau _{zy} \right )}{\partial z}+\frac{\partial \left ( \omega  \tau _{xz} \right )}{\partial x}+\frac{\partial \left ( \omega  \tau _{yz} \right )}{\partial y}+\frac{\partial \left ( \omega  \tau _{zz} \right )}{\partial z}+\rho \boldsymbol{f}\cdot \boldsymbol{V}<br>\end{align}<br>$$</p><h3 id="无黏流动方程-欧拉方程">无黏流动方程（欧拉方程）</h3><p>对于非定常、三维可压缩无黏流动，其控制方程为<br><strong>连续方程</strong><br>非守恒型<br>$$\frac{D\rho }{Dt}+ \rho \boldsymbol{\nabla} \cdot \boldsymbol{V}= 0$$<br>守恒型<br>$$\frac{\partial \rho }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \boldsymbol{V} \right )= 0$$</p><p><strong>动量方程</strong><br>非守恒型<br>x方向表达式：$\rho \frac{Du}{Dt}= -\frac{\partial p}{\partial x}+\rho f_{x}$</p><p>y方向表达式：$\rho \frac{D\upsilon }{Dt}= -\frac{\partial p}{\partial y}+\rho f_{y}$</p><p>z方向表达式：$\rho \frac{D\omega }{Dt}= -\frac{\partial p}{\partial z}+\rho f_{z}$</p><p>守恒型<br>x方向表达式：$\frac{\partial\left (  \rho u\right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho u \boldsymbol{V}\right )=-\frac{\partial p}{\partial x}+\rho f_{x}$</p><p>y方向表达式：$\frac{\partial \left (  \rho \upsilon\right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \upsilon  \boldsymbol{V}\right )= -\frac{\partial p}{\partial y}+\rho f_{y}$</p><p>z方向表达式：$\frac{\partial \left ( \rho \omega  \right ) }{\partial t}+\boldsymbol{\nabla}\cdot \left ( \rho \omega   \boldsymbol{V}\right )= -\frac{\partial p}{\partial z}+\rho f_{z}$</p><p><strong>能量方程</strong><br>非守恒型<br>$$\rho \frac{D}{Dt}\left ( e+\frac{V^{2}}{2} \right )=\rho \dot{q}-\frac{\partial \left ( up \right )}{\partial x}-\frac{\partial \left ( \upsilon p \right )}{\partial y}-\frac{\partial \left ( \omega  p \right )}{\partial z}+\rho \boldsymbol{f}\cdot \boldsymbol{V}$$</p><p>守恒型<br>$$\frac{\partial }{\partial t}\left [ \rho \left ( e+\frac{V^{2}}{2}\right ) \right ]+\boldsymbol{\nabla}\cdot \left [ \rho \left ( e+\frac{V^{2}}{2}\right )\boldsymbol{V} \right ]=\rho \dot{q}-\frac{\partial \left ( up \right )}{\partial x}-\frac{\partial \left ( \upsilon p \right )}{\partial y}-\frac{\partial \left ( \omega  p \right )}{\partial z}+\rho \boldsymbol{f}\cdot \boldsymbol{V}$$</p><h2 id="适用于cfd的控制方程形式">适用于CFD的控制方程形式</h2><p>守恒型的连续、动量和能量方程均可以表示成统一的形式。由下式给出：<br>$$\frac{\partial \boldsymbol{U}}{\partial t}+\frac{\partial \boldsymbol{F}}{\partial x}+\frac{\partial \boldsymbol{G}}{\partial y}+\frac{\partial \boldsymbol{H}}{\partial z}=\boldsymbol{J}$$</p><p>其中<br>$$<br>\boldsymbol{U}=\begin{pmatrix}<br>\rho \\<br>\rho u\\<br>\rho \upsilon \\<br>\rho \omega \\<br>\rho \left ( e+\frac{V^{2}}{2} \right )<br>\end{pmatrix}<br>$$</p><p>$$<br>\boldsymbol{F}=\begin{pmatrix}<br>\rho u\\<br>\rho u^{2}+p-\tau _{xx}\\<br>\rho \upsilon u-\tau _{xy} \\<br>\rho \omega u-\tau _{xz} \\<br>\rho \left ( e+\frac{V^{2}}{2} \right )u+pu-K\frac{\partial T}{\partial x}-u\tau _{xx}-\upsilon \tau _{xy}-\omega \tau _{xz}<br>\end{pmatrix}<br>$$</p><p>$$<br>\boldsymbol{G}=\begin{pmatrix}<br>\rho \upsilon \\<br>\rho u\upsilon -\tau _{yx}\\<br>\rho \upsilon^{2} +p-\tau _{yy} \\<br>\rho \omega \upsilon -\tau _{yz} \\<br>\rho \left ( e+\frac{V^{2}}{2} \right )\omega +p\upsilon -K\frac{\partial T}{\partial y}-u\tau _{yx}-\upsilon \tau _{yy}-\omega \tau _{yz}<br>\end{pmatrix}<br>$$</p><p>$$<br>\boldsymbol{H}=\begin{pmatrix}<br>\rho \omega  \\<br>\rho u\omega -\tau _{zx}\\<br>\rho \upsilon\omega -\tau _{zy} \\<br>\rho \omega^{2} +p -\tau _{zz} \\<br>\rho \left ( e+\frac{V^{2}}{2} \right )\omega +p\omega -K\frac{\partial T}{\partial z}-u\tau _{zx}-\upsilon \tau _{zy}-\omega \tau _{zz}<br>\end{pmatrix}<br>$$</p><p>$$<br>\boldsymbol{J}=\begin{pmatrix}<br>0  \\<br>\rho f_{x}\\<br>\rho f_{y} \\<br>\rho f_{z} \\<br>\rho\left ( uf_{x}+\upsilon f_{y}+\omega f_{z} \right )+\rho \dot{q}<br>\end{pmatrix}<br>$$</p><h2 id="二阶线性偏微分方程的分类">二阶线性偏微分方程的分类</h2><p>二阶线性偏微分方程的一般形式为<br>\begin{align}<br>a_{11}u_{xx}+2a_{12}u_{xy}+a_{22}u_{yy}+b_{1}u_{x}+b_{2}u_{y}+cu=f<br>\end{align}</p><blockquote><p>其中$a_{11}$，$a_{12}$，$a_{22}$，$b_{1}$，$b_{2}$，$c$，$f$均为区域$\Omega$上的实值函数且连续可微。</p></blockquote><p>若在区域$\Omega$上某点$\left ( x_{0} ,y_{0}\right )$<br>$\Delta =a_{12}^{2}-a_{11}a_{22}&gt;0$，则称该偏微分方程为双曲型；<br>$\Delta =a_{12}^{2}-a_{11}a_{22}=0$，则称该偏微分方程为抛物型；<br>$\Delta =a_{12}^{2}-a_{11}a_{22}&lt;0$，则称该偏微分方程为椭圆型；</p><h2 id="参考链接">参考链接</h2><p><a href="https://www.jianshu.com/p/e74eb43960a1" target="_blank" rel="noopener">Markdown数学公式语法</a><br><a href="https://blog.csdn.net/katherine_hsr/article/details/79179622" target="_blank" rel="noopener">Markdown数学符号&amp;公式</a><br><a href="https://blog.csdn.net/weixin_30915951/article/details/96025927" target="_blank" rel="noopener">Latex公式字母加粗</a><br><a href="http://latex.codecogs.com/eqneditor/editor.php" target="_blank" rel="noopener">Latex公式在线编辑器</a><br><a href="http://dyfluid.com/" target="_blank" rel="noopener">东岳流体</a><br><a href="http://www.bookask.com/book/5854.html" target="_blank" rel="noopener">计算流体力学入门</a><br><a href="https://jdhao.github.io/2017/10/06/hexo-markdown-latex-equation/" target="_blank" rel="noopener">Hexo 书写 LaTeX 公式时的一些问题及解决方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近正在学习偏微分方程数值解法这门课程，发现其中很多内容在《计算流体力学入门》中存在较多的重叠部分，知识点有点多，故对所学习的进行一个大概的整理。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://ink-bottle.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>封闭离散点的边界寻找方法</title>
    <link href="https://ink-bottle.github.io/2020/03/30/Region-Boundaries/"/>
    <id>https://ink-bottle.github.io/2020/03/30/Region-Boundaries/</id>
    <published>2020-03-30T01:21:23.000Z</published>
    <updated>2020-03-30T09:45:10.832Z</updated>
    
    <content type="html"><![CDATA[<p>在很多情况下我们需要对离散点进行封闭拟合，比如在图像识别领域中的物体轮廓提取，逆向工程中的三维扫描重建等等，完成对目标的轮廓提取或扫描后往往得到的是具有大量的离散点云。本文主要给出基于MATLAB的依据二维和三维中的点构建的多边形和多面体的功能函数总结。</p><a id="more"></a><h2 id="研究现状">研究现状</h2><p>由于干扰因素的存在和测量条件的限制，得到的目标边缘散点或表面散点会出现强噪声，边缘断裂，表面孔洞，异常数据点等现象。针对这些现象，许多学者都提出了相应的求解方法，如二维轮廓离散点的局部连接法、最小二乘法曲线拟合、Hough变换、基于视觉感知边缘连接（Visual Perception Edge Linking，VPEL）算法、基于顺序边缘连接（Sequential Edge Linking，SEL）算法以及基于模糊判定的边缘连接方法等；还有三维表面离散点的隐式曲面方法、最小移动二乘法、单元多层次分解方法、(泊松流)曲面重构、变分方法、机器学习／统计学方法等。</p><p>其中<a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2010&amp;filename=JSJC201024073&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MjY0MDF6N0JiYkc0SDlIT3E0OUNaNFI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5sVjc3Qkw=" target="_blank" rel="noopener">赵亮</a>等人提出一种由截面上散点生成的最短路径拟合轮廓曲面的方法，通过构造最短截面路径，得到多层截面的轮廓线，从而在相邻的截面间生成轮廓曲面，最后基于曲率流的光顺方法对曲面进行光顺处理，在三维地震体数据可视化的具体应用实验中获得了较好的效果。<a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2011&amp;filename=JSJA201105070&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MjIyMTNvOUNaSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5sV3J2TEx6N0JiN0c0SDlETXE=" target="_blank" rel="noopener">刘光帅</a>等人提出了一种点云重构算法，通过候选筛分边界点进行拓扑初始化，利用泛洪(flooding)算法进行边界封闭环提取，基于统计学方法对边界进行优化，获得分段光滑的网格曲面。<a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2014&amp;filename=JSGG201407039&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MzE3OTJGeW5uVUxyTEx6N01hYkc0SDlYTXFJOUdiWVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnY=" target="_blank" rel="noopener">徐毅</a>等人提出一种基于路径形态学的断裂边缘修复技术，通过考虑等照度线曲率、梯度值、边缘端点前进方向等多重判据构建形态学闭算子，对边缘图进行路径闭运算，从而完成对断裂边缘的连接。<a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFDLAST2015&amp;filename=JLGY201502015&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MDM5NzZZWVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5nVUwvSkx5SE1kN0c0SDlUTXJZOUU=" target="_blank" rel="noopener">顾天奇</a>等人提出一种基于移动最小二乘法构造了一种新的封闭离散点拟合方法，基于封闭离散点的几何特征，提出一种新的权值确定方法，该方法通过构造一个与弦长有关的点，赋予支持域内各点的权值，使临近点的权值变化逐步衰减，实现了拟合曲线的局部逼近，在叶片截面形线离散点拟合中取得了很好的效果。</p><h2 id="凸包算法">凸包算法</h2><p>对于二维离散点密度较小的情况下，进行凸多边形勾勒往往可以采用凸包算法，该算法的实现思路如下：</p><ol><li>找到离散点中，保证y坐标最大的情况下，x坐标最小的点，记做A点</li><li>以A点为原点，x轴正反向射线（Ax）顺时针扫描，找到旋转角最小时扫描到的点，记做B点</li><li>以B点为原点，AB方向射线（AB）顺时针扫描，找到旋转角最小时扫描到的点，记做C点</li><li>以C点为原点，BC方向射线（BC）顺时针扫描，找到旋转角最小时扫描到的点，记做D点</li><li>以此类推，直到找到起始点A</li></ol><p><img src="https://i.loli.net/2020/03/30/fZUSd9e765rtocK.png" alt="20150623225525008.jpg"><br><img src="https://i.loli.net/2020/03/30/KnVEORPt34CQcaA.png" alt="20150623225921049.jpg"><br><img src="https://i.loli.net/2020/03/30/zZVUB8qG3uT9FkI.png" alt="20150623230149494.jpg"><br><img src="https://i.loli.net/2020/03/30/hZEKaz8gGw9V7MO.png" alt="20150623230500257.jpg"></p><p>Matlab已将凸包算法集成于convhull这个函数中，其语法如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">k = convhull(P) <span class="comment">%计算矩阵P中点的二维或三维凸包。</span></span><br><span class="line">k = convhull(x,y) <span class="comment">%计算列向量x和y中点的二维凸包。</span></span><br><span class="line">k = convhull(x,y,z) <span class="comment">%计算列向量x、y和z中点的三维凸包。</span></span><br><span class="line">k = convhull(___,<span class="string">'Simplify'</span>,tf) <span class="comment">%指定是否删除不影响凸包面积或体积的顶点。默认情况下，tf 为 false。</span></span><br><span class="line">[k,av] = convhull(___) <span class="comment">%也计算凸包的面积或体积。</span></span><br></pre></td></tr></table></figure><h2 id="alpha-shapes">Alpha Shapes</h2><p>对于凸包算法往往只能用于勾勒凸多边形，在非凸多边形中往往不能取得预期的结果，比如我需要求下图（a）中的边界，但是用凸包算法得到的是（b）中的结果，我们理想的结果是（c）中得到的边界，这时候就要寻求另一种算法。<br><img src="https://i.loli.net/2020/03/30/zfVPAyL7eZmgME4.png" alt="20200215230543904.png"></p><p>Alpha Shapes可以用来从一堆无序的点集中提取边缘，这个边界不一定是凸的，也不一定是联通的，但是其一定程度上表示了这一组离散点的轮廓。通过调节参数可以使边界更加精细或粗糙。设有一点集S的Alpha-Shapes是一个多边形，这个多边形是由点集S和半径参数α决定的且唯一。它的原理如图所示。<br><img src="https://i.loli.net/2020/03/30/I8QrpSK4cgJnlBi.png" alt="20200330163550.png"></p><p>可以想象成一个半径为α的圆在点集S外滚动，当α足够大时，这个圆就不会滚到点集内部，其滚动的痕迹就是这个点集的边界线。因此，当α值很小，则每个点都是边界；如果α很大（α→∞）时，则求出的边界线为点集S的凸包。可用下式表示：<br>$$ lim_{α→0}S_{α}=S  and  lim_{α→∞}S_{α}=convS $$<br><img src="https://i.loli.net/2020/03/30/62sgDUHbWTLlcju.jpg" alt="Introduction to Alpha Shapes - Computer graphics.jpg"></p><h3 id="alpha-shapes算法实现方法">Alpha Shapes算法实现方法</h3><p>一个有限离散点集S由n个点构成，这n个点可以组成n×(n−1)条线段，那么判断哪些线段是边界线上的线段通过以下方法进行：</p><blockquote><p>在点集S内，过任意两点P1、P2绘制半径为α的圆，如果这个圆内没有其他点，则认为点P1、P2是边界点，其连线P1、P2是边界线段。假设已知两点P1、P2坐标分别是x1、y1，x2、y2，求过这两点的圆的圆心P3，实际上就是求与这两点距离为α的点P3的坐标x3、y3。获得圆心后，要判断圆内是否有其他点，则只需判断是否存在其他点到圆心的距离小于α值。<br><img src="https://i.loli.net/2020/03/30/QpRSbcmn6INCJhG.png" alt="20200330170230.png"></p></blockquote><p>该方法需要多次的判断点是否落在园内，计算量较大。为了减少计算量，采用先建立三角网，再从三角网的外边界开始进行判断，其流程如下：</p><blockquote><ol><li>根据点集s建立Delaunay三角网；</li><li>在三角网上删除不符合Alpha-Shapes要求的三角型。先删除边长大于2α的三角形；再递归判断要删除的边缘三角型，若通过三角形外边两点并且半径为α的圆包含其他点，则删除此边缘三角形。如图所示，当前所要判断的三角型为ΔABC，外边两点A和B，半径为α并且通过A，B两点的圆包含点C，则从三角网上删除ΔABC。添加新出现的边缘三角型ΔACE和ΔABC到待处理堆栈中。</li><li>在删除不符合Alpha-Shapes要求的三角型后所得到的三角网上求出三角网的边缘。该边缘即为点集s的边缘线。<br><img src="https://i.loli.net/2020/03/30/GvqSQ21l53LkeKi.png" alt="20200330170636.png"></li></ol></blockquote><h3 id="alpha-shapes算法在matlab中实现">Alpha Shapes算法在MATLAB中实现</h3><p>MATLAB在R2014b中推出alphaShape功能函数，其语法如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shp = alphaShape(x,y) <span class="comment">%使用默认alpha半径创建一个包含点 (x,y) 的二维 alpha 形状。默认 alpha 半径将生成最紧凑的拟合 alpha 形状，将所有点包括在内。</span></span><br><span class="line">shp = alphaShape(x,y,z)</span><br><span class="line">shp = alphaShape(P) <span class="comment">%指定矩阵P的各列中的点 (x,y) 或 (x,y,z)。</span></span><br><span class="line">shp = alphaShape(___,a) <span class="comment">%使用上述语法中的任何参数创建一个alpha半径为a的 alpha 形状。</span></span><br><span class="line">shp = alphaShape(___,Name,Value) <span class="comment">%使用一个或多个Name,Value对组参数指定的其他选项。例如，您可以使用 'HoleThreshold' 隐藏内部孔或空隙。</span></span><br></pre></td></tr></table></figure><p>若只是对二维或三维空间内的一组点的边界进行寻找，可以使用boundary功能函数，其语法如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">k = boundary(x,y) <span class="comment">%返回一个表示包围点 (x,y) 的单个相容二维边界的点索引向量。点 (x(k),y(k)) 构成边界。与凸包不同，边界可以向内部收缩以包围这些点。</span></span><br><span class="line">k = boundary(x,y,z)</span><br><span class="line">k = boundary(P) <span class="comment">%指定矩阵 P 的各列中的点 (x,y) 或 (x,y,z)。</span></span><br><span class="line">k = boundary(___,s) <span class="comment">%结合上述语法指定收缩因子s。s是一个介于0和1之间的标量。将s设置为0可生成凸包，将s设置为1可生成包围这些点的紧凑边界。默认收缩因子是0.5。</span></span><br><span class="line">[k,v] = boundary(___) <span class="comment">%还返回一个标量 v，它是边界 k 围住的面积（二维）或体积（三维）。</span></span><br></pre></td></tr></table></figure><p>下面是一个例子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%创建并绘制一个随机二维点集。</span></span><br><span class="line">x = <span class="built_in">gallery</span>(<span class="string">'uniformdata'</span>,<span class="number">30</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">y = <span class="built_in">gallery</span>(<span class="string">'uniformdata'</span>,<span class="number">30</span>,<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'.'</span>)</span><br><span class="line">xlim([<span class="number">-0.2</span> <span class="number">1.2</span>])</span><br><span class="line">ylim([<span class="number">-0.2</span> <span class="number">1.2</span>])</span><br><span class="line"><span class="comment">%使用默认收缩因子计算包围这些点的边界。</span></span><br><span class="line">k = boundary(x,y);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x(k),y(k));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/30/FH6DcdCQ8TtlkWp.png" alt="boundaryof2dpointcloudexample_02_zh_CN.png"></p><h2 id="参考文献">参考文献</h2><p><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2010&amp;filename=JSJC201024073&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MjY0MDF6N0JiYkc0SDlIT3E0OUNaNFI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5sVjc3Qkw=" target="_blank" rel="noopener">截面最短连通路径法的散点轮廓曲面拟合</a><br><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2011&amp;filename=JSJA201105070&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MjIyMTNvOUNaSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5sV3J2TEx6N0JiN0c0SDlETXE=" target="_blank" rel="noopener">离散点云原始形状及边界曲线提取算法</a><br><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2014&amp;filename=JSGG201407039&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MzE3OTJGeW5uVUxyTEx6N01hYkc0SDlYTXFJOUdiWVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnY=" target="_blank" rel="noopener">基于路径形态学的图像边缘连接方法</a><br><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFDLAST2015&amp;filename=JLGY201502015&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzYxVXg4QW5iZ3I5OXJwN3lUMD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MDM5NzZZWVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeW5nVUwvSkx5SE1kN0c0SDlUTXJZOUU=" target="_blank" rel="noopener">封闭离散点的曲线拟合方法</a><br><a href="https://blog.csdn.net/manerfan/article/details/46610683" target="_blank" rel="noopener">离散点最小（凸）包围边界查找</a><br><a href="https://blog.csdn.net/Quason/article/details/104336524" target="_blank" rel="noopener">散点轮廓算法——Alpha Shapes</a><br><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFD2010&amp;filename=HGDB201002090&amp;uid=WEEvREcwSlJHSldRa1Fhb09pSnNvVXZRQzZ2NXJ6Mi9zOGZZU21TMDF5Zz0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4ggI8Fm4gTkoUKaID8j8gFw!!&amp;v=MDA0ODc0SDlITXJZOU1aSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlpPVnZGeS9uVWI3UExTclBiTEc=" target="_blank" rel="noopener">利用Alpha Shapes算法提取离散点轮廓线</a><br><a href="https://kns.cnki.net/kcms/detail/detail.aspx?filename=JSJZ200403007&amp;dbcode=CJFQ&amp;dbname=CJFD2004&amp;v=" target="_blank" rel="noopener">平面离散点集的边界搜索算法</a><br><a href="https://ww2.mathworks.cn/help/matlab/ref/alphashape.html#namevaluepairarguments" target="_blank" rel="noopener">依据二维和三维中的点构建的多边形和多面体</a><br><a href="https://ww2.mathworks.cn/help/matlab/math/types-of-region-boundaries.html#bui8zx5" target="_blank" rel="noopener">区域边界的类型</a><br><a href="https://ww2.mathworks.cn/help/matlab/ref/boundary.html" target="_blank" rel="noopener">二维或三维空间内的一组点的边界</a><br><a href="https://ww2.mathworks.cn/help/matlab/ref/convhull.html" target="_blank" rel="noopener">凸包</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在很多情况下我们需要对离散点进行封闭拟合，比如在图像识别领域中的物体轮廓提取，逆向工程中的三维扫描重建等等，完成对目标的轮廓提取或扫描后往往得到的是具有大量的离散点云。本文主要给出基于MATLAB的依据二维和三维中的点构建的多边形和多面体的功能函数总结。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://ink-bottle.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>MATLAB对excel文件数据的读写</title>
    <link href="https://ink-bottle.github.io/2020/02/11/matlab-change-excel/"/>
    <id>https://ink-bottle.github.io/2020/02/11/matlab-change-excel/</id>
    <published>2020-02-11T09:39:51.000Z</published>
    <updated>2020-02-11T12:27:29.478Z</updated>
    
    <content type="html"><![CDATA[<p>平日有很多时候需要对excel表格进行批量读取和修改与处理，故对于常用操作进行一个基本的总结。</p><a id="more"></a><h2 id="matlab读入excel表格">MATLAB读入excel表格</h2><p>所使用函数：xlsread。</p><p>调用形式：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num = xlsread(filename)</span><br><span class="line">num = xlsread(filename,sheet)</span><br><span class="line">num = xlsread(filename,xlRange)</span><br><span class="line">num = xlsread(filename,sheet,xlRange)</span><br><span class="line">num = xlsread(filename,sheet,xlRange,<span class="string">'basic'</span>)</span><br><span class="line">[num,txt,raw] = xlsread(___)</span><br><span class="line">[num,txt,raw,custom] = xlsread(filename,sheet,xlRange,<span class="string">''</span>,processFcn)</span><br></pre></td></tr></table></figure><p>其中，输入参数有：</p><ul><li>filename：excel文件名，当然在这之前先定义好文件路径。</li><li>sheet：表格文件中的表格编号或名字，如sheet1，sheet2，sheet3，默认为1。</li><li>xlRange：要读取的数据区域，如‘B2:U102’，就是读取excel中B2到U102这一范围内的数据。</li><li>‘basic’：标记请求在基本模式下读取，基本模式是没有Excel的Windows电脑的默认模式。</li><li>processFcn：自定义函数的句柄。此参数仅在使用Excel软件的Windows计算机上受支持。xlsread从电子表格中读取数据，在数据副本上执行函数，并返回最终结果。<br>输出参数有：</li><li>num：数值数据，输出为double型的数组。</li><li>txt：文本数据，输出为元胞数组。</li><li>raw：表格中的数字和文本数据，输出为元胞数组。</li><li>custom：与processFcn对应的函数的第二个输出。自定义的值和数据类型由函数决定。</li></ul><p>使用举例(读取相对路径下“data1”下的sheet1中的D2：D306的数据)：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[a1,txt2,A1] = xlsread(<span class="string">'data1.xlsx'</span>,<span class="number">1</span>,<span class="string">'D2:D306'</span>)</span><br></pre></td></tr></table></figure><h2 id="matlab写入excel表格">MATLAB写入excel表格</h2><p>所使用函数：xlswrite。</p><p>调用形式：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xlswrite(filename,A)</span><br><span class="line">xlswrite(filename,A,sheet)</span><br><span class="line">xlswrite(filename,A,xlRange)</span><br><span class="line">xlswrite(filename,A,sheet,xlRange)</span><br><span class="line">status = xlswrite(___)</span><br><span class="line">[status,message] = xlswrite(___)</span><br></pre></td></tr></table></figure><p>输入参数同理，输出参数有：</p><ul><li>status：写操作的状态，以1(真)或0(假)的形式返回。当写操作成功时，状态为1。否则，状态为0。</li><li>message：写操作过程中产生的错误或警告，以包含两个字段的结构数组形式返回。</li></ul><p>使用举例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xlswrite(<span class="string">'data1.xlsx'</span>,ARecd,<span class="number">3</span>,<span class="string">'G2:G1733'</span>)</span><br></pre></td></tr></table></figure><p>如何将分离的数值数据和文本数据拼接为一个元胞数组：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">filepath=<span class="string">'D:\Personal Files\course\yuleilixue\';</span></span><br><span class="line"><span class="string">[data,str] = xlsread([filepath '</span>GLM input data.xlsx']);</span><br><span class="line"><span class="comment">%拼接data数值和str字符串元胞矩阵</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : <span class="built_in">size</span>(data, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : <span class="built_in">size</span>(data, <span class="number">2</span>)</span><br><span class="line">    str(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="built_in">num2cell</span>(data(<span class="built_in">i</span>,<span class="built_in">j</span>));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">xlswrite([filepath <span class="string">'GLM input data.xlsx'</span>],str);<span class="comment">%写入表格文件</span></span><br></pre></td></tr></table></figure><h2 id="参考链接">参考链接</h2><p><a href="https://jingyan.baidu.com/article/d621e8da7861572864913f43.html" target="_blank" rel="noopener">matlab中怎么将字符写入excel表格</a><br><a href="https://blog.csdn.net/qq_26552071/article/details/82780055" target="_blank" rel="noopener">使用MATLAB对excel文件数据的读写操作</a><br><a href="https://jingyan.baidu.com/article/b907e627673d6146e7891c98.html" target="_blank" rel="noopener">Excel函数—VLOOKUP查找数据并返回（提取）内容</a><br><a href="https://blog.csdn.net/zllljf/article/details/78881081" target="_blank" rel="noopener">matlab中double、char和cell的互转</a><br><a href="https://blog.csdn.net/thy19988/article/details/78489623" target="_blank" rel="noopener">MATLAB怎样有效读取excel文件中的数据？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平日有很多时候需要对excel表格进行批量读取和修改与处理，故对于常用操作进行一个基本的总结。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>child of light | 光之子</title>
    <link href="https://ink-bottle.github.io/2020/01/24/child-of-light/"/>
    <id>https://ink-bottle.github.io/2020/01/24/child-of-light/</id>
    <published>2020-01-24T03:38:19.000Z</published>
    <updated>2020-02-01T02:58:15.378Z</updated>
    
    <content type="html"><![CDATA[<p>若光芒全都跑光了，那么谁来为你照亮黑暗的路途呢。</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28491307&auto=1&height=66"></iframe><p>我们似乎早就过了读童话故事的年龄，王子与公主，勇士与恶龙，魔法与女巫，森林与高塔……童话世界中简单的世界观给予了我们最初的善恶观念。童话故事一直以来都深受孩子们和育儿家长们的喜爱，不仅仅是因为它保留了人性的纯真，还有便是它往往都会拥有着一个幸福圆满的结局。在这个世界里，正义会战胜邪恶，善良会使狡诈无处遁形，有情人终成眷属，身边往往会有一群情意深重的朋友帮助自己度过难关。正是这些美好的愿景为孩子们构造了一个心中的完美的世界，即便他们在长大的过程中逐渐发现世界可能并不是那么的简单美好，但是他们内心深处依然会有一块地方留给孩时的纯真幻想世界。</p><p>比起文学作品，游戏在讲述故事方面拥有着巨大的优势，结合文字，音乐，画面，在给玩家带来游戏感的同时也能给玩家以不输于电影般的观看体验。《光之子》是育碧使用雷曼UbiArt引擎所开发制作的2D绘本风格JRPG游戏，将水墨风格的画面和身临其境的配乐结合在一起，给人以极致美感的游戏体验。</p><p><img src="https://i.loli.net/2020/01/26/HGg64DzXN2TfhdW.png" alt="5.png"><br><img src="https://i.loli.net/2020/01/26/Z93D5NXRLVTaE1v.png" alt="6.png"></p><blockquote><p>这是一个关于失落王国雷姆利亚的故事，故事的主人公是一位充满光辉的女孩。奥地利曾经在一位公爵的统治之下，欧若拉是这位公爵的女儿。她由一位神秘的公爵夫人所生，也是其父亲的掌上明珠。公爵独自一人将她养大，十分疼爱她。有的时候公爵会感到孤独和自责，那是由于他过去所犯下的错。<br>1895年，复活节前的星期五。一群表演者在公爵的面前杂耍，他的新娘就在身旁，而那个夜里的欧若拉睡着了。烛火越来越微弱，欧若拉受到风寒的影响，她的皮肤冻得像雪一样。第二天早晨，人们发现欧若拉面无表情，她眼中的光芒消失了。他的父亲悲伤欲绝，却无能为力。任谁看了都会明白，昔日那鲜活的欧若拉死了。<br>而在那时的欧若拉，突然间在一个陌生的大陆上苏醒了。<br>欧若拉为了踏上回家的路，她必须从神秘的夜之女王手中找回太阳、月亮和星星，而她身旁除了伴随著萤火虫伙伴微光外，还会有一群不大可靠的盟友与她一起冒险，欧若拉将要面对最阴暗的恐惧、包含巨龙和其他奇幻生物，并在游戏内展开一场史诗历险。</p></blockquote><h2 id="游戏剧情">游戏剧情</h2><p>欧若拉遇见的第一位伙伴便是微光，一只萤火虫（第一眼的印象不得不说确实像阿里旺旺），这只萤火虫既能为欧若拉照亮黑暗解开谜题打开宝箱，也能在战斗中拖慢敌人的脚步救治己方人员。光芒象征着希望，这缕光芒给了欧若。拉在异世界里继续冒险下去的勇气。<br><img src="https://i.loli.net/2020/01/26/FbHBpu17k9XsnJx.png" alt="7.png"></p><p>在后面，欧若拉陆续穿过梅西尔德森林、兰伯特平原、艾琳峭壁、月亮神殿、淹没的丘陵、辛贝尔海，先后遇见了小丑露贝拉，魔法师菲恩，商人罗伯特，双鱼村的小洁，小丑崔斯第和守卫奥耶格斯。最终从夜之女王手中夺回太阳、月亮和星星，救回了原本世界中即将被洪水淹没的子民。</p><p>其中也有很多游戏内的小对话，比如在为玛格娜解除心脏束缚时：</p><blockquote><p>微光：欧若，什么叫作爱？<br>欧若：就是当你说再见时会心痛的感觉。</p></blockquote><h2 id="游戏画面">游戏画面</h2><p>游戏画面是采用了2D手绘风格，不同景深的配色极大的丰富了画面中的细节，让人真切地感受到了这个异世界的宏大和幽深，抛去游戏部分，仅仅是这唯美且清新的画面便足以值回游戏价格。这让我想起了荒野之息中林克刚刚从山洞里出来站在悬崖上俯瞰整个世界的场景，它在告诉你，这是个值得驻足观看欣赏的世界。<br><img src="https://i.loli.net/2020/02/01/e4fYNjAtJOoa8Iw.jpg" alt="(null)(8).jpg"><br><img src="https://i.loli.net/2020/02/01/6IGtqcZLCoTRl1u.jpg" alt="(null)(4).jpg"><br><img src="https://i.loli.net/2020/02/01/nGMQyWSq4jf73E8.jpg" alt="(null)(9).jpg"><br><img src="https://i.loli.net/2020/02/01/ZU4AjopkX51mfBs.jpg" alt="(null)(3).jpg"></p><h2 id="战斗系统">战斗系统</h2><p>游戏中的战斗是RPG游戏中常见的回合制战斗，但有所不同的是，施放技能的过程需要一段行动条，使得在这个过程中技能的释放可能会被打断，如此，既不会使得战斗过程过于枯燥无趣，也不会使得玩家像FPS游戏中一直保持紧张的注意力。<br><img src="https://i.loli.net/2020/01/27/VnsYldevu7PSwfO.png" alt="8.png"><br>比较用心的一点是，战斗的场景并非一成不变，而就是选择在了敌我相遇的地点。这样便使得战斗的开始与结束并不显得突兀，不会让人感觉战斗与世界相抽离。</p><h2 id="游戏配乐">游戏配乐</h2><p>除了游戏画面，游戏中的背景音乐也是十分精良，不同的场景中有着不同心境的配乐。在阴森的森林中，耳畔传来了呼啸的夜风和野兽的嗷叫，欧若拉还带有对异世界的不安与恐惧，此刻的她急切地想从这个可怕的梦中醒来，回到自己的父亲身边，此时的背景音乐低沉而幽暗；在兰伯特平原的小镇中，此处人声鼎沸，到处都充满了活力和生机，背景音乐便从风车谷中的平缓安静变得欢快活泼起来。总之，这个游戏的OST让我百听不厌。</p><p>今天大年三十，祝愿大家新年快乐，身体健康，能够在家过上一个健康美满的新年，也希望疫情尽快退散，人们生活回归正常。</p><h2 id="游戏视频">游戏视频</h2><div style="position: relative;width: 100%;height: 0;padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=85105690&cid=145509817&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><h2 id="参考链接">参考链接</h2><p><a href="https://baike.baidu.com/item/%E5%85%89%E4%B9%8B%E5%AD%90/13684739#4" target="_blank" rel="noopener">光之子百度百科</a><br><a href="https://zhuanlan.zhihu.com/p/29005132?utm_source=com.miui.notes&amp;utm_medium=social" target="_blank" rel="noopener">《光之子》：在雷姆利亚大陆展开一场久违的传统RPG征程</a><br><a href="https://baike.baidu.com/tashuo/browse/content?id=9b9d9c1a6e535035d8269ed9&amp;lemmaId=13684739&amp;fromLemmaModule=pcBottom" target="_blank" rel="noopener">如果异世界没有星星、月亮和太阳，你还愿意去吗丨光之子</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;若光芒全都跑光了，那么谁来为你照亮黑暗的路途呢。&lt;/p&gt;
    
    </summary>
    
      <category term="游戏" scheme="https://ink-bottle.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>新年前夕</title>
    <link href="https://ink-bottle.github.io/2019/12/31/2020-new-year/"/>
    <id>https://ink-bottle.github.io/2019/12/31/2020-new-year/</id>
    <published>2019-12-31T13:27:33.000Z</published>
    <updated>2020-01-01T05:51:40.151Z</updated>
    
    <content type="html"><![CDATA[<p>故岁今宵尽，新年明日来。不知不觉中又走过了一年，时间是无情的，它一刻也不多留，硬生生地把我推到2019年的最后一天，只留给我一晚的空闲让我去审视自己这一年的足迹。</p><a id="more"></a><p>年初时我还是一名大四学生，毕设工作不过刚刚开始，时间对我来说十分充裕，每天的日常不过是查阅文献，背一会单词，和室友一起在绝地海岛飙车，偶尔出门拍一张校园的雪景。<br><img src="https://i.loli.net/2019/12/31/mrpWwKOxqMjQS6u.jpg" alt="IMG_20181227_175052.jpg"></p><p>一月中旬，在师兄和学弟们的帮助下，我很顺利的在十天内就完成了自己的毕设实验工作，也学习了一些基本的学术概念。这次的寒假回家算是大学四年中呆在家里最长的寒假了，就是在寒假这段时间里我搭建好了自己的博客，有了一个可以放置自己生活和学习的地方。走之前还独自去自己的高中母校逛了一圈，现在学校已经比毕业时要好得多了，有着自己的室内体育场，也有了长长的回廊和晶莹的小湖。<br><img src="https://i.loli.net/2019/12/31/C6fcQb3xn9YFMvr.jpg" alt="IMG_20190207_134309.jpg"></p><p>在大学四年中总是脚步匆匆，从未留心身边的景色，今年寒假回校后才真正感受到北方春季的短暂和宝贵，浅绿的树芽在短短几天内就能形成枝繁叶茂的初夏。<br><img src="https://i.loli.net/2020/01/01/XPfmWINdbj9lxRy.jpg" alt="IMG_20190327_094123.jpg"><br><img src="https://i.loli.net/2020/01/01/LovT7PBhAb1eiN2.jpg" alt="IMG_20190414_120053.jpg"></p><p>转眼间大四下就已经结束，在毕业典礼和拍摄毕业照上穿上学士服，向着蓝天抛起自己的学士帽，就这样给自己的大学四年画上一个句号。揣上自己的毕业证书和研究生录取证书，开始了下一阶段的人生。</p><p>这一年的暑假并没有能够有时间回家，而是留在学校里帮忙做实验，练习写文章，驾校练车，一点一滴地提升自己。有时也常去图书馆看书，罗伯特·海因莱茵的科幻作品《严厉的月亮》《双星》《时间足够你爱》这些书就是在这段时间读完的。西安的夏天一如既往的炎热，但夏天的雨景和傍晚的夜景依然是不可多得的视觉享受。<br><img src="https://i.loli.net/2020/01/01/V6vuxDel3JBtHMp.jpg" alt="IMG_20190627_155050.jpg"><br><img src="https://i.loli.net/2020/01/01/5clk1jiG8ARS6mg.jpg" alt="IMG_20190717_201003.jpg"></p><p>8月下旬，在老师的安排下我第一次参加了全国性的学术会议，分别是合肥的水动力会议和杭州的力学大会，同时这也是我第一次坐飞机的经历，高空中的俯瞰给人的感觉时崭新而宏伟的，绵延起伏的山峦和清澈纯净的蓝天也只有在万米高空中能看的如此清晰。<br><img src="https://i.loli.net/2020/01/01/k1ivRLn9ON4hCYr.jpg" alt="IMG_20190819_161014.jpg"></p><p>第一次作学术报告的经历我仍记忆犹新，我是一个不善于在大众面前发言的人，脑海中所思所想经过语言不成熟的表达后只能表达出三分，好在提前做好了充足的准备，还算是对自己的表现较为满意。在合肥由于时间安排较为紧张，未得空闲去游览，但是在杭州时，我得以走到只在诗中才能看到的西湖旁，虽然长途行走颇为劳累，但能看到雷峰晚照，湖畔垂柳就已经算是不虚此行了。<br><img src="https://i.loli.net/2020/01/01/47nLZuFNeHktSGy.jpg" alt="IMG_20190826_183618.jpg"></p><p>杭州的夏末傍晚也很漂亮，更具都市感~<br><img src="https://i.loli.net/2020/01/01/ri1kRA6coaIUzBS.jpg" alt="IMG_20190825_183529_1.jpg"></p><p>研究生入学后，虽然课程不多但是空余时间并不充裕，经历了一个学期的学习，我已经逐步适应现在的研究生生活和学习节奏。西安的夏天在入学后历经几次反复和几场秋雨后逐渐褪去，取而代之的是凛冽的寒风和枯黄的落叶，同时由于各种原因还有灰重醇厚的雾霾。<br><img src="https://i.loli.net/2020/01/01/1bLlmQ7NVEnqFoO.jpg" alt="IMG_20191225_154832.jpg"><br><img src="https://i.loli.net/2020/01/01/P9nbF5hjgzpY48u.jpg" alt="IMG_20191225_153440.jpg"></p><p>转眼间就到了今年的最后一天，就在前一天还写了一部分学院给学生的元旦贺卡，满满的堆叠起来积攒的不仅是我对他人的祝福，也有我对自己的期待。<br><img src="https://i.loli.net/2020/01/01/8YaGZJDpcigQXft.jpg" alt="IMG_20191229_234200.jpg"></p><p>今夜学校一年一度的嘉年华和跨年会同样丰富，但是冰冷入骨的天气和拥挤的人潮以及孤单的自己让我放弃了集齐所有奖章的想法，回到宿舍，泡上一桶热气腾腾的泡面，写下自己的一年。<br><img src="https://i.loli.net/2020/01/01/KXQMDfB7aT2nzwZ.jpg" alt="IMG_20191231_190117.jpg"></p><p>这一年中，我有过不少难忘且深刻的经历，也有了不少的收获，既犯下过无可挽回的错误也得到了一定的成长，凡事总有开始，我需要做的是探寻自己的内心，在不经过深思熟虑前不轻易许诺，不仅要为他人负责，也要对自己负责。新的一年即将开启，祝愿自己能每一天都奔跑在自己的热爱的事物里，成为一个有趣而自信的人。也祝愿身边的大家能够爱之所爱，万事胜意。</p><p>2020，你好！<br><img src="https://i.loli.net/2020/01/01/skK2A9gin8xGumd.png" alt="9620904b7578127dd101f501dcde3de1.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;故岁今宵尽，新年明日来。不知不觉中又走过了一年，时间是无情的，它一刻也不多留，硬生生地把我推到2019年的最后一天，只留给我一晚的空闲让我去审视自己这一年的足迹。&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>冬至</title>
    <link href="https://ink-bottle.github.io/2019/12/22/midwinter/"/>
    <id>https://ink-bottle.github.io/2019/12/22/midwinter/</id>
    <published>2019-12-22T14:58:08.000Z</published>
    <updated>2020-01-01T04:39:40.774Z</updated>
    
    <content type="html"><![CDATA[<p>冬至最是白昼短，花饺入汤暖夜长。</p><a id="more"></a><p>今天冬至，是一年之内白昼最短，黑夜最长的一日，西安今日天气-2℃-8℃，空气污染严重。恰好今天考研结束，祝考研学子们都能得到一个满意的结果。</p><p>研究生入学已经将近一个学期，我开始慢慢熟悉了研究生学习生活和工作的节奏。相较于大学生活，因为学习课程较少，研究生拥有更多可自由支配的时间（在没有被老板安排工作任务的情况下）。除了学习，研究生工作还有一个重要的部分就是科研，一般来说老板会为自己先确定一个研究方向，这往往在我本科毕设选题的时候就已经基本确定，但是自己还是会有自主选择科研方向的权利。研究方向极为重要，毕竟在人类文明蓬勃发展的今天，普通人无法在多个学科领域做到精通，绝大多数研究者都是在极细小的一个方向上进行深耕，以期取得些许突破。对于个人来说，研究方向不仅决定了自己今后的科研工作内容，甚至在某种程度上决定了自己的就业。</p><p>现在的我还处于学习基本科研技能的阶段，远未到为人类知识殿堂添砖加瓦的水平，至少在研一时期，我需要在充分了解各个研究方向的情况下为自己选择好合适的研究方向，毕竟在人生的许多阶段，选择要比无谓的努力重要。</p><p>今天没发生什么大事，我和舍友窝在宿舍复习数值分析一整天，送修的Airpods也完整地回来了，并且买好了回家的火车票，就剩下掰着指头数日子等过年了。</p><p><img src="https://i.loli.net/2019/12/23/MgqeknhZWUOsC72.jpg" alt="ad178e97d9c15327928bd27a58fe155a.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;冬至最是白昼短，花饺入汤暖夜长。&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>matlab和Origin作图的一系列问题和解决方案</title>
    <link href="https://ink-bottle.github.io/2019/11/15/Origin/"/>
    <id>https://ink-bottle.github.io/2019/11/15/Origin/</id>
    <published>2019-11-15T11:05:46.000Z</published>
    <updated>2020-01-10T14:04:20.489Z</updated>
    
    <content type="html"><![CDATA[<p>论文作图软件有很多，数据类的图小白一次接触的应该就是Excel，matlab等，流程图使用visio，除此之外进阶一些的还有<a href="http://gnuplot.sourceforge.net/" target="_blank" rel="noopener">Gnuplot</a>，Matplotlib，Tikz，<a href="https://www.originlab.com/" target="_blank" rel="noopener">Origin</a>和Python等，统计数据可视化使用R-ggplot2，流场图使用Tecplot，Paraview等。当然，利用这些作图软件画好图后存为eps格式矢量图出来再用illustrator进行后期美化。如果实在没有时间而需要急着出图，PPT也是一个不错的选择😛。</p><a id="more"></a><blockquote><p>作为论文数据的主要载体，图片直接呈现了文章的叙事逻辑和主要结论，并且反映出文章的重点和创新点。很多读者（包括审稿人）的阅读习惯都是先看图，如果图片质量高，读者就有兴趣一探究竟；如果图片看起来不太顺眼，那么读者（审稿人）的印象就不会太好，甚至会认为作者科研素养不高或者是准备稿件时不够认真，进而质疑文章数据及结论的可靠性。</p></blockquote><p>有关matlab和origin作图，我将我遇到的一些问题和方法整理如下。</p><h2 id="matlab">MATLAB</h2><p><strong>坐标格式设置</strong><br>对于matlab作图时需要的一些操作，例如设置坐标轴粗细，保留左边和下边的刻度，去掉上边和右边的刻度等等可以通过下面的代码实现，而不必要每次点开属性检查器去修改了。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">axis equal; <span class="comment">%坐标平均</span></span><br><span class="line">set(gca,<span class="string">'tickdir'</span>,<span class="string">'out'</span>);<span class="comment">%刻度线朝外</span></span><br><span class="line">box off;<span class="comment">%去除右边框和上边框</span></span><br><span class="line">line([<span class="number">-80</span>,<span class="number">240</span>],[<span class="number">50</span> <span class="number">50</span>],<span class="string">'Color'</span>,[<span class="number">0.15</span> <span class="number">0.15</span> <span class="number">0.15</span>],<span class="string">'LineWidth'</span>,<span class="number">1.5</span>)<span class="comment">%画上边框</span></span><br><span class="line">line([<span class="number">240</span>,<span class="number">240</span>],[<span class="number">-350</span> <span class="number">50</span>],<span class="string">'Color'</span>,[<span class="number">0.15</span> <span class="number">0.15</span> <span class="number">0.15</span>],<span class="string">'LineWidth'</span>,<span class="number">1.5</span>)<span class="comment">%画下边框</span></span><br><span class="line">set(gca,<span class="string">'LineWidth'</span>,<span class="number">1.5</span>,<span class="string">'fontsize'</span>,<span class="number">15</span>,<span class="string">'fontname'</span>,<span class="string">'Times New Roman'</span>);<span class="comment">%坐标轴粗细，刻度数字字体大小格式设置</span></span><br><span class="line">xlabel(<span class="string">'Distance to the impact point (mm)'</span>,<span class="string">'Fontname'</span>, <span class="string">'Times New Roman'</span>,<span class="string">'FontSize'</span>,<span class="number">15</span>);<span class="comment">%x轴标题，字体大小格式设置</span></span><br><span class="line">ylabel(<span class="string">'Distance to the water surface (mm)'</span>,<span class="string">'Fontname'</span>, <span class="string">'Times New Roman'</span>,<span class="string">'FontSize'</span>,<span class="number">15</span>);<span class="comment">%y轴标题，字体大小格式设置</span></span><br><span class="line">set(gca,<span class="string">'XTick'</span>,[<span class="number">-80</span>:<span class="number">40</span>:<span class="number">240</span>]);<span class="comment">%设置x轴刻度范围和增量</span></span><br><span class="line">axis([<span class="number">-80</span> <span class="number">240</span> <span class="number">-350</span> <span class="number">50</span>]);<span class="comment">%设置x轴y轴刻度范围</span></span><br></pre></td></tr></table></figure><p><strong>封闭离散点的曲线绘制</strong><br>除了数据曲线图之外，我们可能需要对一堆轮廓数据点进行相互连接，即利用散点画闭合不规则曲线，但是plot函数是按点的顺序连接的，也就是说想要连成曲线你必须对各个点进行编号然后再连接，在数据点较少的情况下可以实现，但是如果有上百个数据点这样就不太现实。不过我们可以通过寻找相邻点互连的思路来做，具体代码如下：其中<em>2073.txt</em>为导入的数据点。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;</span><br><span class="line">file_number=load(<span class="string">'2073.txt'</span>);</span><br><span class="line">file_number_x=file_number(:,<span class="number">1</span>);<span class="comment">%取数据点的x坐标</span></span><br><span class="line">file_number_y=file_number(:,<span class="number">2</span>);<span class="comment">%取数据点的y坐标</span></span><br><span class="line">temporary_file_number=file_number;<span class="comment">%创建临时的数据点文件</span></span><br><span class="line">initial_point=[file_number(<span class="number">1</span>,<span class="number">1</span>),file_number(<span class="number">1</span>,<span class="number">2</span>)];<span class="comment">%给定初始点</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(file_number_x)</span><br><span class="line">    new_number(<span class="built_in">i</span>,<span class="number">1</span>)=initial_point(<span class="number">1</span>);new_number(<span class="built_in">i</span>,<span class="number">2</span>)=initial_point(<span class="number">2</span>);<span class="comment">%将寻找的点重新排序放入新的矩阵</span></span><br><span class="line">    point_find=<span class="built_in">ismember</span>(temporary_file_number,initial_point,<span class="string">'rows'</span>);<span class="comment">%找出点所在的行数的位置</span></span><br><span class="line">    point_location=<span class="built_in">find</span>(point_find==<span class="number">1</span>);</span><br><span class="line">    temporary_file_number(point_location,:)=[];<span class="comment">%删除需要连接的点，防止连接到上一个点</span></span><br><span class="line">    temporary_file_number_x=temporary_file_number(:,<span class="number">1</span>);</span><br><span class="line">    temporary_file_number_y=temporary_file_number(:,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">length</span>(temporary_file_number_x)&gt;=<span class="number">1</span>    <span class="comment">%寻找连通的下一个最近的点</span></span><br><span class="line">        <span class="keyword">for</span> k=<span class="number">1</span>:<span class="built_in">length</span>(temporary_file_number_x)</span><br><span class="line">            search_pointx=temporary_file_number(k,<span class="number">1</span>);</span><br><span class="line">            search_pointy=temporary_file_number(k,<span class="number">2</span>);</span><br><span class="line">            point_disance(k)=<span class="built_in">sqrt</span>((search_pointx-initial_point(<span class="number">1</span>))^<span class="number">2</span>+(search_pointy-initial_point(<span class="number">2</span>))^<span class="number">2</span>);<span class="comment">%求点距</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        [min_point_disance, min_point_disance_location] = <span class="built_in">min</span>(point_disance);<span class="comment">%找出最小距离和最小距离点所处的位置</span></span><br><span class="line">        initial_point=[temporary_file_number(min_point_disance_location,<span class="number">1</span>),temporary_file_number(min_point_disance_location,<span class="number">2</span>)];<span class="comment">%初始点替换</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    point_disance=[];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(new_number(:,<span class="number">1</span>),new_number(:,<span class="number">2</span>),<span class="string">'-'</span>,<span class="string">'Color'</span>,[<span class="number">0</span>,<span class="number">0.79</span>,<span class="number">0.34</span>],<span class="string">'LineWidth'</span>,<span class="number">1.5</span>);</span><br><span class="line">axis equal;</span><br></pre></td></tr></table></figure><h2 id="origin">Origin</h2><p>Origin在网络上有很丰富的教程，但有些过于老旧，个人推荐使用Origin2016-2018版本，Origin2019使用过程中发现不少问题，不够稳定。这里给出一个Origin2016使用教程下载链接：<a href="https://pan.baidu.com/s/1Y-bUfCWsZZUvYvp_OrCeGA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Y-bUfCWsZZUvYvp_OrCeGA</a> 提取码：5h4v Origin2016下载链接：<a href="https://pan.baidu.com/s/1FP0P3xnRZCN_9QcmjO4cYw" target="_blank" rel="noopener">https://pan.baidu.com/s/1FP0P3xnRZCN_9QcmjO4cYw</a> 提取码：teai</p><p><strong>关于Origin的汉化问题</strong><br>安装过程中安装序列号有中文版序列号为DF2W8-9089-7991320；英文版序列号为GF3S4-9089-7991320，必须采用中文版序列号。<br>改变语言：运行regedit。进入HKEY_CURRENT_USER\Software\OriginLab\Origin 9.5-&gt;Language，输入C是中文，E是英文。</p><p><strong>作图时出现大C</strong><br>工具-选项-图形，鼠标放在 用户自定义符号 下方，按ctrl+x,再去掉 快速模式显示水印 前的勾，点击ok,后边会出现提示save as origin’s startup options，点“是”，如果再出现“C”保存关闭工程再打开就不会有“C”了</p><p><strong>保存图片时出现demo字样</strong><br>有的origin破解完成后，使用没问题，但导出的图有demo水印。其实不需要重装，只需要下载一个补丁即可解决。<br>把下载到的origin.exe复制到安装文件夹，双击执行以下即可。双击后没有任何提示，但其实去水印破解已经完成。<br>补丁下载如下<br>链接: <a href="https://pan.baidu.com/s/1cFDAxg" target="_blank" rel="noopener">https://pan.baidu.com/s/1cFDAxg</a> 提取码：h9t9<br>但是7天后会失效，因此需要Windows计划任务里建立任务，每七天执行一次“双击origin.exe”的任务。<br>有关如和设置定时任务执行，点击该教程：<a href="https://jingyan.baidu.com/article/39810a2396cef6b637fda67c.html" target="_blank" rel="noopener">windows server 2012 定时任务执行</a></p><p><strong>x-y轴交换</strong><br>当曲线走向是“C”型时，即在同一x轴坐标下存在两个不同的点如（x1,y1）和（x1,y2）时，由于Origin作图按照给定的顺序（一般是按x轴大小顺序）连线，此时作图会出错。解决方法是通过将x-y轴数据交换再画图，之后再通过图→x-y轴交换将图片还原至正常状态。</p><p><strong>主题保存</strong><br>当需要大量做同一类型的数据图时，我们已经对线型、标志、坐标轴样式、文字格式等已经做好了改动，在新图中再进行修改需要耗费大量时间。如果能够设置数据图格式主题，在新的一张图中应用该主题即可。<br>使用方法：在修改好的图中右键→保存格式为主题<br><img src="https://i.loli.net/2019/11/15/CeVYRudEUN1ykhf.png" alt="TIM图片20191115190630.png"><br>在新的一张图中点击 工具→主题管理器→选择主题→立即应用<br><img src="https://i.loli.net/2019/11/15/HMotJfp7FQaRGyT.png" alt="TIM图片20191115190951.png"></p><h2 id="参考链接">参考链接</h2><p><a href="http://www.sztspi.com/archives/64146.html" target="_blank" rel="noopener">论文作图经验谈</a><br><a href="https://blog.csdn.net/FnqTyr45/article/details/81784597" target="_blank" rel="noopener">这些论文绘图软件，你一个都不会用</a><br><a href="https://www.zhihu.com/question/29557377?sort=created" target="_blank" rel="noopener">科研画图都用什么软件？</a><br><a href="http://muchong.com/html/201603/10021818.html" target="_blank" rel="noopener">MATLAB作图，如何保留左边和下边的刻度，去掉上边和右边的刻度？</a><br><a href="https://www.cnblogs.com/ileanj1998/p/9060664.html" target="_blank" rel="noopener">matlab绘图与可视化</a><br><a href="https://blog.csdn.net/qing101hua/article/details/78425567" target="_blank" rel="noopener">Matlab绘图-很详细，很全面</a><br><a href="https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFDLAST2015&amp;filename=JLGY201502015&amp;uid=WEEvREdxOWJmbC9oM1NjYkZCbDdrNTBKaUxSY2Urdzg2SjBCMXpPV2QxaHQ=$R1yZ0H6jyaa0en3RxVUd8df-oHi7XMMDo7mtKT6mSmEvTuk11l2gFA!!&amp;v=MTQ2MDBlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9lWnVkcUZ5SGxXN3ZOTHlITWQ3RzRIOVRNclk5RVlZUjg=" target="_blank" rel="noopener">封闭离散点的曲线拟合方法</a><br><a href="https://blog.csdn.net/dingchenxixi/article/details/50904543" target="_blank" rel="noopener">Origin作图出现锯齿状以及出现大C字母问题解决方案</a><br><a href="https://tieba.baidu.com/p/5384403387?red_tag=2404435738" target="_blank" rel="noopener">Origin去除demo水印方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;论文作图软件有很多，数据类的图小白一次接触的应该就是Excel，matlab等，流程图使用visio，除此之外进阶一些的还有&lt;a href=&quot;http://gnuplot.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gnuplot&lt;/a&gt;，Matplotlib，Tikz，&lt;a href=&quot;https://www.originlab.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Origin&lt;/a&gt;和Python等，统计数据可视化使用R-ggplot2，流场图使用Tecplot，Paraview等。当然，利用这些作图软件画好图后存为eps格式矢量图出来再用illustrator进行后期美化。如果实在没有时间而需要急着出图，PPT也是一个不错的选择😛。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Python在sublime text3中不能运行input()的问题（转载）</title>
    <link href="https://ink-bottle.github.io/2019/10/15/Python/"/>
    <id>https://ink-bottle.github.io/2019/10/15/Python/</id>
    <published>2019-10-15T05:05:46.000Z</published>
    <updated>2020-01-01T04:40:06.561Z</updated>
    
    <content type="html"><![CDATA[<p>由于sublime不支持外部数据的输入，因此需要额外安装插件解决这个问题。原文链接：<a href="https://www.cnblogs.com/Hiooary/p/7542440.html" target="_blank" rel="noopener">sublime text3–解决不能运行input()的问题</a></p><a id="more"></a><h2 id="安装sublimerepl">安装SublimeREPL</h2><ul><li><p>调用ctrl+shift+p，输入：sublimerepl选择并安装；</p></li><li><p>然后tools–sublimeREPL–Python–Python RUN current file，运行当前文件，这时候已经支持输入了数据了；</p></li></ul><p><img src="https://i.loli.net/2019/11/15/NlmuAIoxSg78C21.png" alt="TIM图片20191115104803.png"></p><ul><li>为了调试方便，我们可以把这个窗口放到右边，先设置sublime的窗口显示为多层：View --&gt; Layout --&gt; Columns:2</li></ul><p><img src="https://i.loli.net/2019/11/15/7D4Ee8cosY2XIRK.png" alt="TIM图片20191115104453.png"></p><ul><li>最后，由于每次运行程序都要执行：Tools --&gt; SublimeREPL --&gt; Python --&gt; RUN current file 菜单有点麻烦，所以现在可以考虑给他创建个快捷键；</li></ul><p>方法：Perferences --&gt; Key bindings 中粘贴如下代码（快捷键红色标示的自定义就可以，个人喜欢F5）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[ &#123;&quot;keys&quot;:[&quot;f5&quot;],</span><br><span class="line"></span><br><span class="line">&quot;caption&quot;: &quot;SublimeREPL: Python - RUN current file&quot;,</span><br><span class="line"></span><br><span class="line">&quot;command&quot;: &quot;run_existing_window_command&quot;, &quot;args&quot;:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&quot;id&quot;: &quot;repl_python_run&quot;,</span><br><span class="line"></span><br><span class="line">&quot;file&quot;: &quot;config/Python/Main.sublime-menu&quot;</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/15/vLcilXzfjIBsRTK.png" alt="TIM图片20191115111240.png"></p><p>这样以后你打开你要运行的Py程序，就可以直接按照你设置的快捷键运行了；</p><h2 id="参考链接">参考链接</h2><p><a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">Python - 100天从新手到大师</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于sublime不支持外部数据的输入，因此需要额外安装插件解决这个问题。原文链接：&lt;a href=&quot;https://www.cnblogs.com/Hiooary/p/7542440.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;sublime text3–解决不能运行input()的问题&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>暑假随记</title>
    <link href="https://ink-bottle.github.io/2019/08/29/%E6%9A%91%E5%81%87%E9%9A%8F%E8%AE%B0/"/>
    <id>https://ink-bottle.github.io/2019/08/29/暑假随记/</id>
    <published>2019-08-29T06:30:10.000Z</published>
    <updated>2020-01-01T04:43:00.834Z</updated>
    
    <content type="html"><![CDATA[<p>从本科毕业到研究生开学期间有着将近两个月的假期，对于以往的我来说，整天宅在家里躺上摇椅咬着冰棍看着火烧云的暑假才是正确的日常，然而在这个暑假里我甚至都没能回家。前期跑新校区做实验外加写小论文，中期顶着太阳学车结果过了科三挂了科二，后期参加全国水动力研讨会和全国力学大会，看上去自己好像还过的挺充实的🤨</p><a id="more"></a><p>在合肥工业大学参加水动力研讨会时，由于忙着排练自己的报告，一直呆在酒店，除了白天听学术报告以外，也没有踏足合肥的一些风景名胜，比如三河古镇，李鸿章故居等等，算是一件比较遗憾的事情啦。不过合肥的美食倒是有所领略，当时居住酒店所在处一整条街基本都是饭馆，其中又以虾宴最多，老师和几位师兄带我去的是一家店名“人民公社”的饭店，又红又专的店名😂。</p><p>全国力学大会开在了风景秀丽的杭州，长达四天的会议让我有足够的时间去看看这座旅游城市。都说江南忆，最忆是杭州，这次有幸能够来到这里，自然不能错过。</p><p>杭州风景名胜之首应是西湖，白居易曾作诗句“未能抛得杭州去，一半勾留是此湖”，古代文人墨客对西湖从未吝啬赞美之词。虽然立秋已过，西湖的游人仍然不少。我走到西湖时夕阳已经快要落山了，一路经过雷峰夕照，南屏晚钟等景点，但只是匆匆经过，毕竟需要在天黑之前赶上苏堤。</p><p>到达苏堤时落阳已经隐匿，远山深色如黛，落日的余晖给残云镶了一道金黄色底边，远处及近天空蓝得越发清澈，湖波仍在荡漾，将天边的景色不断地摇碎融化。</p><p><img src="https://i.loli.net/2019/08/31/QedRWp4Fsmrl786.jpg" alt="IMG_20190826_181909.jpg"><br><img src="https://i.loli.net/2019/09/01/gmUZP5JqrCvSytV.jpg" alt="IMG_20190826_183613.jpg"></p><p>苏堤旁边还有一片荷花池，只是夏意已经散去，在重重叠叠的荷叶中还能发现一两朵残荷，所谓三秋桂子，十里荷花今天是见不到了。</p><p><img src="https://i.loli.net/2019/09/01/lwHrIQL2s8xf1Me.jpg" alt="IMG_20190826_182251.jpg"><br><img src="https://i.loli.net/2019/09/01/lLF4PXTjgJm15IN.jpg" alt="IMG_20190826_183206.jpg"></p><p>站在苏堤上远眺雷峰塔。</p><p><img src="https://i.loli.net/2019/09/01/IjULTZntD4V1q92.jpg" alt="IMG_20190826_182817.jpg"></p><p>夜色逐渐深沉，知了和蟋蟀声此起彼伏，由于正处于月末，不得月色照湖，本来还想着坐在湖边石凳上吹着湖风遥观远方夜景，但是飞蚊劝退😅</p><blockquote><p>【苏轼 】蝶恋花·密州上元<br>灯火钱塘三五夜。明月如霜，照见人如画。帐底吹笙香吐麝。此般风味应无价。<br>寂寞山城人老也。击鼓吹箫，乍入农桑社。火冷灯稀霜露下。昏昏雪意云垂野。</p></blockquote><p><img src="https://i.loli.net/2019/09/01/QczHfFqKaVn2urp.jpg" alt="IMG_20190826_184350.jpg"><br><img src="https://i.loli.net/2019/09/01/OE46bjlXLsnpZki.jpg" alt="IMG_20190826_185036.jpg"></p><p>走出苏堤后天色已经完全黑了，去了一家店名“弄堂里”的饭店吃晚饭，因为只是和师兄两个人一起出来，所以没能点很多菜，点了有火腿甜豆，西湖醋鱼，一品鲜菌汤，海胆虾仁烩豆腐就已经足够多啦，味道都很不错的。</p><p>临走前去了一趟六和塔，还未入塔门时便看见一只守护兽正虎视眈眈地盯着我，然后慢慢接近我还嗅了嗅我的鞋？然后很威严地给我放行了😌</p><p><img src="https://i.loli.net/2019/09/01/fkPwg3dntoVMbSR.jpg" alt="IMG_20190829_100100.jpg"></p><p><img src="https://i.loli.net/2019/09/01/mdG6CQUVzL3BneT.jpg" alt="IMG_20190829_100021.jpg"></p><p><img src="https://i.loli.net/2019/09/01/naLg5dPiBH2wVhG.jpg" alt="IMG_20190829_100043.jpg"></p><p>六和塔全貌~</p><p><img src="https://i.loli.net/2019/09/01/8heQZ43pU5cN6qJ.jpg" alt="IMG_20190829_100215.jpg"></p><p>塔后有一座小亭，周边绿荫环绕，坐在里面既凉爽又安静，还能听到不远处悠长的撞钟声。</p><p><img src="https://i.loli.net/2019/09/01/8ZPhncKx7MTlGtz.jpg" alt="IMG_20190829_100839.jpg"></p><p>出六和塔后就能走到钱塘江边啦，刚刚下过雨的钱塘江边还是湿漉漉的，而且天上低沉的乌云还在压迫着城市。江面如天地一般开阔，目光所及处不是天空就是江面，当然还有夹在缝隙间的城市与钱塘江大桥。</p><p><img src="https://i.loli.net/2019/09/01/93xdYIyJHfkBeWO.jpg" alt="IMG_20190829_110510_1_.jpg"></p><p>还没来得及多想，这些都已经过去了，稍作纪念吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从本科毕业到研究生开学期间有着将近两个月的假期，对于以往的我来说，整天宅在家里躺上摇椅咬着冰棍看着火烧云的暑假才是正确的日常，然而在这个暑假里我甚至都没能回家。前期跑新校区做实验外加写小论文，中期顶着太阳学车结果过了科三挂了科二，后期参加全国水动力研讨会和全国力学大会，看上去自己好像还过的挺充实的🤨&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于学术期刊级别的记录</title>
    <link href="https://ink-bottle.github.io/2019/07/25/%E5%85%B3%E4%BA%8E%E5%AD%A6%E6%9C%AF%E6%9C%9F%E5%88%8A%E7%BA%A7%E5%88%AB%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>https://ink-bottle.github.io/2019/07/25/关于学术期刊级别的记录/</id>
    <published>2019-07-25T08:38:03.000Z</published>
    <updated>2020-01-01T04:43:05.822Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个即将成为科研工作者的萌新，首先有必要了解的是一些期刊论文的一些基本常识，比如有关于SCI，一区，影响因子，自引率等等名词的认识，现在我将搜集的有关概念的解释集中于本文，希望能对大家有所帮助。</p><a id="more"></a><h2 id="科技文献检索系统">科技文献检索系统</h2><p>关于EI、CPCI、SCI，其末尾的I意为Index，在这里翻译可以成索引或者检索。学术工作者们这些工具进行关键词检索，从而快速地找到想要的论文。</p><h3 id="sci-science-citation-index">SCI（Science Citation Index）</h3><p>SCI即《科学引文索引》，是由美国科学信息研究所创建的，收录文献的作者、题目、源期刊、摘要、关键词，不仅可以从文献引证的角度评估文章的学术价值，还可以迅速方便地组建研究课题的参考文献网络。SCI创刊于1961年。经过40年的发展完善，已从开始时单一的印刷型发展成为功能强大的电子化、集成化、网络化的大型多学科、综合性检索系统。</p><p>SCI从来源期刊数量划分为SCI和SCI-E。SCI指来源刊为3500多种的SCI印刷版和SCI光盘版（SCI Compact Disc Edition, 简称SCI CDE），SCI-E（SCI Expanded）是SCI的扩展库，收录了5600多种来源期刊，可通过国际联机或因特网进行检索。SCI涵盖学科超过100个，主要涉及农业、生物及环境科学；工程技术及应用科学；医学与生命科学；物理及化学；行为科学。</p><h3 id="ssci-social-science-citation-index">SSCI（Social Science Citation Index）</h3><p>SCI的姊妹篇，亦由美国科学信息研究所创建，是目前世界上可以用来对不同国家和地区的社会科学论文的数量进行统计分析的大型检索工具。1999 年SSCI全文收录1809种世界最重要的社会科学期刊，内容覆盖包括人类学、法律、经济、历史、地理、心理学 等55个领域。收录文献类型包括：研究论文，书评，专题讨论，社论，人物自传，书信等。选择收录期刊为1300多种。</p><h3 id="ei-the-engineering-index">EI （The Engineering Index）</h3><p>由美国工程信息公司编辑出版。每年摘录世界工程技术期刊约3000种，还有会议文献、图书、技术报告和学位论文等，报道文摘约15万条，内容包括全部工程学科和工程活动领域的研究成果。是供查阅工程技术领域文献的综合性情报检索数据库，涵盖领域：动力、电工、电子、自动控制、矿冶、金属工艺、机械制造、管理、土建、水利、教育工程等。</p><h3 id="cpci-conference-proceedings-citation-index">CPCI（Conference Proceedings Citation Index）</h3><p>《科技会议录索引》是综合性科技会议文件检索数据库，提供1990年以来以专著、丛书、预印本、期刊、报告等形式出版的国际会议论文文摘及参考文献索引信息，涵盖领域：自然科学、技术科学以及历史与哲学等。自2008年10月20日起，在全新升级的Web of Science中，ISTP更名为CPCI。由此，CPCI成为Web of Science大家庭中的新成员，与SCIE, SSCI, A&amp;HCI共同形成了一道独特的“引文索引”风景线。</p><h3 id="cssci-chinese-social-sciences-citation-index">CSSCI（Chinese Social Sciences Citation Index）</h3><p>《中文社会科学引文索引》用来检索中文社会科学领域的论文收录和文献被引用情况。 它是由南京大学中国社会科学研究评价中心开发研制而成，是国家、教育部重点课题攻关项目。CSSCI遵循文献计量学规律，采取定量与定性评价相结合的方法从全国2700余种中文人文社会科学学术性期刊中精选出学术性强、编辑规范的期刊作为来源期刊。目前收录包括法学、管理学、经济学、历史学、政治学等在内的25大类的500多种学术期刊，现已开发的CSSCI（1998—2009年）12年度数据，来源文献近100余万篇，引文文献600余万篇。CSSCI数据库已被北京大学、清华大学、中国人民大学、武汉大学、吉林大学、山东大学、南京大学等100多个单位购买使用，并将CSSCI作为地区、机构、学术、学科、职称、项目、成果评价与评审的重要依据。</p><p><img src="https://i.loli.net/2019/07/26/5d3ab9254b87151525.jpg" alt="1564129541335.jpg"></p><blockquote><p>平常大家说的“发EI”、“发SCI”指的是给“EI”、“SCI”收录的学术会议或者期刊投稿并发表。<br>其中<strong>学术会议</strong>是一种以促进科学发展、学术交流、课题研究等学术性话题为主题的会议。学术会议是一种以促进科学发展、学术交流、课题研究等学术性话题为主题的会议。学术会议一般都具有国际性、权威性、高知识性、高互动性等特点，其参会者一般为科学家、学者、教师等具有高学历的研究人员。由于学术会议是一种交流的，互动的会议，因此参会者往往都会将自己的研究成果以学术展板的形式展示出来，使得互动交流更加直观、效果更好。<br>而<strong>学术期刊</strong>是一种经过同行评审的期刊，发表在学术期刊上的文章通常涉及特定的学科。学术期刊展示了研究领域的成果，并起到了公示的作用，其内容主要以原创研究、综述文章、书评等形式的文章为主。<br><strong>收录</strong>的概念比较类似于“认证”。这些索引并不是与搜索引擎一般利用爬虫技术来爬取各类论文，而是对学术会议或者学术期刊进行“评审”。“评审”通过就进入了收录名单，我们就可以通过该索引检索到这些学术会议或期刊发表的论文了。而这个收录名单会也会定期更新。我们在投稿时，可以登录会议或者期刊的官网，可以明确的看到它被哪个索引收录着。</p></blockquote><h2 id="期刊分区">期刊分区</h2><p>期刊的分区问题首先要从期刊的评价说起。尽管期刊的评价指标有很多种，比如：被引频次、他引率、引用半衰期、被引半衰期、即年指标和影响因子等等，但是对于需要经常评价科研成果的科技工作者来说，用到最多的则是“影响因子”，影响因子越高，表明该期刊在同学科领域中的影响力越大、“质量”越高，从而衬托出作者发表论文的质量。</p><p>然而影响因子的大小是相对的，而且也不够直观，为了更直观地表征期刊在某领域中所处的“水平”，在影响因子的基础上产生了“分区”的概念。关于JCR(Journal Citation Reports, 期刊引证报告) 期刊分区影响较为广泛的有两种：一种是 Thomson Reuters 公司制定的分区（中文一般翻译为汤森路透分区）；第二种是中国科学院国家科学图书馆制定的分区（简称中科院分区）。这两种分区方式均基于 SCI 收录期刊影响因子基础之上进行分区的。</p><h3 id="汤森路透分区">汤森路透分区</h3><p>汤森路透每年出版一本《期刊引用报告》（Journal Citation Reports，简称JCR）。JCR对86000多种SCI期刊的影响因子（Impact Factor）等指数加以统计。JCR将收录期刊分为176个不同学科类别。每个学科分类按照期刊的影响因子高低，平均分为Q1、Q2、Q3和Q4四个区：各学科分类中影响因子前25%(含25%)期刊划分为Q1区，前25%～50% (含50%)为Q2区，前50%～75% (含75% )为Q3区， 75%之后的为Q4区。汤森路透分区中期刊的数量是均匀分为四个部分。</p><h3 id="中科院分区">中科院分区</h3><p>中科院首先将JCR中所有期刊分为数学、物理、化学、生物、地学、天文、工程技术、医学、环境科学、农林科学、社会科学、管理科学及综合性期刊13 大类。然后，将13大类期刊分各自为4 个等级，即4 个区。按照各类期刊影响因子划分，前5% 为该类1 区、6% ～ 20% 为2 区、21% ～ 50% 为3 区，其余的为4 区。显然在中科院的分区中，1区和2区杂志很少，杂志质量相对也高，基本都是本领域的顶级期刊。中科院分区中四个区的期刊数量是从1区到4区呈金字塔状分布。</p><h2 id="期刊的评价指标">期刊的评价指标</h2><p>指该期刊自创刊以来所登载的全部论文在统计当年被引用的总次数。这是一个非常客观实际的评价指标，可以显示该期刊被使用和受重视的程度，以及在科学交流中的作用和地位。</p><h3 id="影响因子">影响因子</h3><p>这是一个国际上通行的期刊评价指标，是E.加菲尔德于1972年提出的。由于它是一个相对统计量，所以可公平地评价和处理各类期刊。通常，期刊的影响因子越大，它的学术影响力和作用也越大。具体算法为：IF=（某刊前2年发表论文在该年的被引用次数）/（该刊前2年发表论文总数）</p><h3 id="期刊被引频次">期刊被引频次</h3><p>可测度期刊自创刊以来的学术影响力，是从信息反馈的角度评价期刊的基本指标之一。该项指标从历史的角度，用期刊论文被引用的数量直接反映了期刊在科学发展和文献交流中所起的作用。具体算法为：：自期刊创刊以来全部论文在某一年被引用的总次数（绝对数量指标）。</p><h3 id="他引率">他引率</h3><p>指该期刊全部被引用次数中，被其他刊引用次数所占的比例。具体算法为：他引率＝(被其他刊引用的次数)/(期刊被引用的总次数)</p><h3 id="自引率">自引率</h3><p>指该期刊全部被引次数中，被该刊本身引用次数所占的比例。具体算法为：自引率＝(被本刊引用的次数)/(期刊被引用的总次数)</p><h3 id="引用半衰期">引用半衰期</h3><p>指该期刊引用的全部参考文献中，较新一半是在多长一段时间内发表的。通过这个指标可以反映出作者利用文献的新颖度。</p><h3 id="扩散因子">扩散因子</h3><p>这是一个用于评估期刊影响力的学术指标，显示总被引频次扩散的范围。具体意义为该期刊当年每被引100 次所涉及的期刊数。</p><h2 id="其它名词概念">其它名词概念</h2><p><strong>通讯作者</strong>：通讯作者往往指课题的总负责人，承担课题的经费、设计、文章的书写和把关。 是文章和研究材料的联系人。 最重要的是，担负着文章可靠性的责任。 负责与编辑部的一切通信联系和接受读者的咨询等。</p><p><strong>第一作者</strong>：在学术出版领域，第一作者或首席作者指的是出版物（例如：学术出版或审计等）的作者栏中排序在第一位的作者。</p><p><strong>共同第一作者</strong>：按照国内期刊署名方式，如果一篇论文有多个作者，按照贡献大小排名的，就按照第一作者第二作者…这样依次排名，评职称时，第一作者也只认可1个人，不能同时有2个人享受第一作者的职称加分。而SCI英文期刊不同，第一作者可以有多个，即共同第一作者。有些影响因子高的期刊甚至可以有4-5个第一作者。当然了这可能基于这些作者对论文的贡献同样大小或者项目难度大合作完成等情况。</p><p><strong>OA期刊</strong>：OA期刊（Open Access Journals）是指读者可以免费在线获取同行评议论文的期刊，由于其开放获取的特点，有利于国际上科研成果更有效地传播，不受到科研机构购买数据库的限制。OA期刊这种模式可以使一些研究成果被更多读者了解，因此很多科研人员喜欢发表开放获取的期刊，尤其是那些被SCI收录的OA期刊。</p><p>实验流体力学方面较好的期刊有:<a href="https://www.cambridge.org/core/journals/journal-of-fluid-mechanics" target="_blank" rel="noopener">journal of fluid mechanics</a>，<a href="https://aip.scitation.org/journal/phf" target="_blank" rel="noopener">physics of fluids</a>，<a href="https://journals.aps.org/pre/" target="_blank" rel="noopener">physical review e</a>，<a href="https://link.springer.com/journal/348" target="_blank" rel="noopener">experiments in fluids</a>等。</p><p><img src="https://i.loli.net/2019/07/26/5d3aeb293a8bf91090.jpg" alt="662245d9f2d3572cbbf077208713632763d0c334.jpg"></p><h2 id="参考链接">参考链接</h2><p><a href="http://blog.sina.com.cn/s/blog_9dd398050102w3vo.html" target="_blank" rel="noopener">【原创】期刊分区是什么？</a><br><a href="http://www.ttdoc.cn/article/129.jhtml" target="_blank" rel="noopener">文献综述、系统综述与Meta分析的异同点</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzIxNjY3MTUzMQ==&amp;mid=2247483893&amp;idx=1&amp;sn=ece1e6e3dab6cc76f494cdce38528eeb&amp;chksm=978435b1a0f3bca761acd0494f8d3c54103ff8668bf80599b8220b9a1458c0b62410ac3c148d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">科普贴 | SCI、EI、CPCI到底是个啥？</a><br><a href="https://zhuanlan.zhihu.com/p/68689509" target="_blank" rel="noopener">SCI期刊分区/期刊名词，一次整明白！</a><br><a href="https://zhuanlan.zhihu.com/p/52201010" target="_blank" rel="noopener">【论文十讲】NO.1检索体系和学术期刊级别</a><br><a href="https://zhuanlan.zhihu.com/p/29234646" target="_blank" rel="noopener">国际学术会议的正确打开方式 （基础篇）</a><br><a href="https://zhuanlan.zhihu.com/p/49839498" target="_blank" rel="noopener">国内外学术期刊常识大科普</a><br><a href="https://www.zhihu.com/question/31558495/answer/131273951" target="_blank" rel="noopener">SCI、EI、核心期刊 这些东西等级是怎么区分的？</a><br><a href="http://blog.sciencenet.cn/blog-2919196-943188.html" target="_blank" rel="noopener">学术期刊评价指标说明</a><br><a href="https://baike.baidu.com/item/%E7%A7%91%E6%8A%80%E6%9C%9F%E5%88%8A%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87" target="_blank" rel="noopener">科技期刊评价指标</a><br><a href="https://www.zhihu.com/question/21384330" target="_blank" rel="noopener">对初次参加学术会议的人有哪些建议？</a><br><a href="https://zhuanlan.zhihu.com/p/39971180" target="_blank" rel="noopener">参加国际机器学习顶级会议ICML 2018有感</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个即将成为科研工作者的萌新，首先有必要了解的是一些期刊论文的一些基本常识，比如有关于SCI，一区，影响因子，自引率等等名词的认识，现在我将搜集的有关概念的解释集中于本文，希望能对大家有所帮助。&lt;/p&gt;
    
    </summary>
    
      <category term="资料" scheme="https://ink-bottle.github.io/categories/%E8%B5%84%E6%96%99/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10下Java环境配置与OpenRocket打开</title>
    <link href="https://ink-bottle.github.io/2019/07/14/Win10%E4%B8%8BJava%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://ink-bottle.github.io/2019/07/14/Win10下Java环境配置/</id>
    <published>2019-07-13T16:25:12.000Z</published>
    <updated>2020-01-01T04:42:55.973Z</updated>
    
    <content type="html"><![CDATA[<p>OpenRocket是一款免费的全功能模型火箭模拟器，可让用户在实际构建和飞行之前设计和模拟火箭。并且该程序是一个基于Java的应用程序，因此它应该在大多数安装了Java引擎的平台上运行。在本文中，将详细介绍如何在Win10下进行Java环境配置。</p><a id="more"></a><h2 id="jdk下载与安装">JDK下载与安装</h2><p>（若已有JDK和JRE安装包，则可跳过该步骤）</p><p>首先我们需要下载java开发工具包JDK，这里是<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JDK官网下载地址</a>，之后点击如图所示按钮。</p><p><img src="https://i.loli.net/2019/07/14/5d2a07ad6360391806.png" alt="TIM图片20190714003227.png"></p><p>点击后显示以下界面，点击接受许可协议，然后点击箭头所指位置下载JDK。</p><p><img src="https://i.loli.net/2019/07/14/5d2a08751cfb257299.png" alt="TIM图片20190714003556.png"></p><p>下载完后得到一个可执行文件，点击运行进入安装。</p><p><img src="https://i.loli.net/2019/07/14/5d2a094034f6f68079.png" alt="TIM图片20190714003918.png"></p><p>选择你要安装到的路径，注意这个路径不能包含中文名，一般默认路径即可，无需修改。安装jdk的过程中安装向导会检查到你未安装jre，然后提示你安装jre。</p><p>但是，我在安装完成的时候安装向导并未提示我安装jre，为了解决这个问题，只需要去官网下载相应的jre然后再安装即可。这里是<a href="http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html" target="_blank" rel="noopener">JRE官网下载地址</a></p><p>同上，点击接受许可协议，然后点击箭头所指位置下载JRE，得到一个可执行文件后点击运行进入安装，注意要将jre和jdk安装在同一个文件夹下（如果路径没有更改，保持默认即可）。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0a7009ab171079.png" alt="TIM图片20190714004418.png"></p><p>安装完成后安装目录下会出现这样两个文件夹即表示安装成功。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0b59b518a26273.png" alt="TIM图片20190714004737.png"></p><h2 id="环境变量配置">环境变量配置</h2><p>进入控制面板→系统和安全→系统→高级系统设置→环境变量</p><p><img src="https://i.loli.net/2019/07/14/5d2a0bbebb15477377.png" alt="TIM图片20190714004953.png"></p><p>首先在系统变量下新建（注意，不要在用户变量下新建）一个变量名为“JAVA_HOME”的系统变量，变量值为“C:\Program Files\Java\jdk-12.0.1”（jdk的安装目录，根据个人所安装的目录修改，如果前面默认安装路径这里也就填入C:\Program Files\Java\jdk-12.0.1即可），如图所示：</p><p><img src="https://i.loli.net/2019/07/14/5d2a0cabbbadc94254.png" alt="TIM图片20190714005350.png"></p><p>点击确定，再在系统变量下新建一个变量名为“CLASSPATH”，变量值为“.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;”的系统变量，注意前面的点号和分号都是有的。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0ce92a52a81483.png" alt="TIM图片20190714005458.png"></p><p>在系统变量下找到Path”系统变量，双击它。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0d171fadf87170.png" alt="TIM图片20190714005541.png"></p><p>在弹出的窗口中点击新建，添加“%JAVA_HOME%\bin”和“%JAVA_HOME%\jre\bin”两个系统变量。Path使得系统可以在任何路径下识别java命令，如图所示：</p><p><img src="https://i.loli.net/2019/07/14/5d2a0da7458e013972.png" alt="TIM图片20190714005803.png"></p><p>点击确定保存。</p><h2 id="测试环境">测试环境</h2><p>至此JAVA环境应该配置完成，为了检测是否确确实实安装成功，进行如下步骤。</p><p>按window+R，输入cmd，打开命令行窗口。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0ea15cc3565248.png" alt="TIM图片20190714010216.png"></p><p>分别输入java和java -version和javac都正常运行即代表java已经正确安装，其中java -version代表你安装的java的版本。下图是输入java -version后的正常显示结果。</p><p><img src="https://i.loli.net/2019/07/14/5d2a0ec85429478022.png" alt="TIM图片20190714010122.png"></p><p>如果出现类似&quot;javac不是内部或外部命令&quot;等提示语句，请再三检查你的环境变量是否正确配置，或者JDK和JRE安装目录是否重复，如果重复，可以选择再次运行下载的jdk安装程序重新安装。</p><h2 id="打开openrocket">打开OpenRocket</h2><p>首先先下载OpenRocket，这里是官方网站<a href="http://openrocket.info/" target="_blank" rel="noopener">下载地址</a></p><p>下载完成后，将下载好的jar文件拷贝到C:\Program Files\Java\jre1.8.0_212\bin（若前面修改了安装路径，这里也需要放在对应的jre目录下）。</p><p>按window+R，输入cmd，打开命令行窗口。输入如下命令转到目标文件夹</p><pre><code>cd C:\Program Files\Java\jre1.8.0_212\bin</code></pre><p>回车，然后输入如下命令</p><pre><code>java -jar OpenRocket-15.03.jar</code></pre><p>这里的命令需要根据自己的OpenRocket版本号进行修改，例如，如果你的OpenRocket版本是14.06，则上面的命令改为</p><pre><code>java -jar OpenRocket-14.06.jar</code></pre><p>按下回车键，打开了这个界面就表示已经打开成功啦</p><p><img src="https://i.loli.net/2019/07/14/5d2a83e06f19284842.png" alt="TIM图片20190714092157.png"></p><h2 id="参考链接">参考链接</h2><p><a href="https://www.runoob.com/java/java-environment-setup.html" target="_blank" rel="noopener">Java 开发环境配置</a><br><a href="https://blog.csdn.net/afei__/article/details/51464783" target="_blank" rel="noopener">Java环境搭建，以win10为例</a><br><a href="https://blog.csdn.net/LINXISHUIJI/article/details/81565036" target="_blank" rel="noopener">再次安装jdk时不会自动安装jre的解决方案</a><br><a href="http://cn.voidcc.com/question/p-hbspryux-rm.html" target="_blank" rel="noopener">.Jar文件将不会打开</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OpenRocket是一款免费的全功能模型火箭模拟器，可让用户在实际构建和飞行之前设计和模拟火箭。并且该程序是一个基于Java的应用程序，因此它应该在大多数安装了Java引擎的平台上运行。在本文中，将详细介绍如何在Win10下进行Java环境配置。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>ICEM学习笔记</title>
    <link href="https://ink-bottle.github.io/2019/06/30/ICEM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ink-bottle.github.io/2019/06/30/ICEM学习笔记/</id>
    <published>2019-06-30T05:18:22.000Z</published>
    <updated>2020-06-04T04:27:12.080Z</updated>
    
    <content type="html"><![CDATA[<p>ICEMCFD(The Integrated Computer Engineering and Manufacturing code for Computational Fluid Dynamics)是一种专业的CAE前处理软件。作为专业的前处理软件ICEMCFD为所有世界流行的CAE软件提供高效可靠的分析模型。它拥有强大的CAD模型修复能力、自动中面抽取、独特的网格“雕塑”技术、网格编辑技术以及广泛的求解器支持能力。同时作为ANSYS家族的一款专业分析环境，还可以集成于ANSYS Workbench平台, 获得Workbench的所有优势。ICEM作为fluent和CFX标配的网格划分软件，取代了GAMBIT的地位。</p><a id="more"></a><h2 id="文件格式介绍">文件格式介绍</h2><p>ICEM文件格式主要有prj、tin、blk、uns、fbc、par、rpl、jrf八种。</p><ul><li>prj文件为工程文件，所有其他文件都与它相关联，可以通过打开prj文件打开所有与之相关的文件。</li><li>tin文件为几何文件，包含有几何模型信息、材料点的定义、全局以及局部网格尺寸定义。</li><li>blk文件为块文件，保存着块的拓扑结构。</li><li>uns文件为网格文件。</li><li>fbc文件保存有边界条件、局部参数等信息。</li><li>par文件保存有模型参数等信息。</li><li>rpl文件用于记录用户的操作信息。</li><li>jrf为ICEM的脚本文件，可用于批处理和二次开发。</li></ul><h2 id="主界面">主界面</h2><p>ICEM主界面如图：</p><p><img src="https://i.loli.net/2019/06/30/5d1853258085a28699.jpg" alt="TIM图片20190630141325.jpg"></p><h2 id="主要功能栏">主要功能栏</h2><p>ICEM主要功能栏如图：</p><p><img src="https://i.loli.net/2019/06/30/5d1857cb26c0582312.jpg" alt="TIM图片20190630143330.jpg"></p><h2 id="主要工作流程">主要工作流程</h2><p>ICEM主要工作流程如图：</p><p><img src="https://i.loli.net/2019/06/30/5d18603d9c9a625329.jpg" alt="TIM图片20190630150912.jpg"></p><h2 id="icem网格生成基本流程：">ICEM网格生成基本流程：</h2><ol><li>设定工作目录，打开或创建新的工程；</li><li>导入几何模型，修改并简化，定义part名称；</li><li>对于非结构化网格需要定义网格尺寸，设定网格的类型和生成方法及其他参数，计算生成网格；对于结构化网格，创建并划分block，建立映射关系，设定节点参数，生成网格；</li><li>检查并编辑网格；</li><li>输出网格。</li></ol><p>其中，block是几何模型对应的拓扑结构，是生成结构化网格的基础。而什么是拓扑结构呢？</p><blockquote><p>首先我们来解释一下拓扑的含义，所谓“拓扑”就是把实体抽象成与其大小、形状无关的“点”，而把连接实体的线路抽象成“线”，进而以图的形式来表示这些点与线之间关系的方法，其目的在于研究这些点、线之间的相连关系。表示点和线之间关系的图被称为拓扑结构图。拓扑结构与几何结构属于两个不同的数学概念。在几何结构中， 我们要考察的是点、线之间的位置关系，或者说几何结构强调的是点与线所构成的形状及大小。如梯形、正方形、平行四边形及圆都属于不同的几何结构，但从拓扑结构的角度去看，由于点、线间的连接关系相同，从而具有相同的拓扑结构即环型结构。也就是说，不同的几何结构可能具有相同的拓扑结构。</p></blockquote><h2 id="壳-面网格生成方法">壳/面网格生成方法</h2><p>Mesh Method，网格生成方法，壳网格生成方法主要有以下四种：</p><ul><li>AutoBlock，自动块方法，自动地在每个面上生成二维的Block然后生成网格；</li><li>Patch Dependent，根据面的轮廓线来生成网格，该方法能够较好地捕捉几何特征，创建以四边形为主的高质量网格；</li><li>Patch Independent，网格生成过程中不严格按照轮廓线，使用稳定的八叉树方法，生成网格过程中能够忽略小的几何特征、缝隙，洞等；</li><li>Shrinkwrap，是一种笛卡尔网格生成方法，会忽略大的几何特征，沟，洞等，不适合薄板类实体网格的生成。</li></ul><h2 id="遇到的一些问题">遇到的一些问题</h2><p>在《ANSYS ICEM CFD网格划分技术实例详解  》一书中有一例：三维自动体网格生成——弯管流动实例中，创建圆柱的入口端面时，右边的出口端面可以创建，但是左边的入口端面用相同的方法却不能创建。</p><p><img src="https://i.loli.net/2019/07/11/5d26fb556acdb84990.png" alt="TIM图片20190711170254.png"></p><p>试了很多次之后然后去网上搜解决方法，发现可以用以下方法解决：</p><ul><li>在创建完curve后，先不要创建弯管的侧面，而是首先创建入口和出口的surface，就不会出现无法创建的情况了。</li><li>随便在圆面上点一个点，打断圆圈线，就可以生产面了。</li></ul><p>打断线的命令：</p><p><img src="https://i.loli.net/2019/07/11/5d26fbb702c9065214.png" alt="w186h3304459_1413436341_502.png"></p><h3 id="进入选择状态时怎样旋转被选择体">进入选择状态时怎样旋转被选择体</h3><p>按F9，就可以对几何体进行旋转和拖动，再按F9就退出这个模式，可以对几何体进行选择。</p><h3 id="网格组装">网格组装</h3><p>ICEM划分网格，对于简单的几何模型能够简单的处理，但是对于稍微复杂的模型或者没办法一次性划分高质量的网格的情况下，我们希望能够对模型进行分解，对单独的块进行网格划分，然后在ICEM中对网格进行重新组装，当然这是可以实现的。</p><p>网格划分完成后必须要保存，确认不要覆盖。例如，一个保存为“prt0001.prj”另一个保为“prt0002.prj”，这样对应的也就生成了“prt0001.uns”和“prt0002.uns”两个网格。（同时打开两个网格打开，或者分别在一个工程中打开模型，会出现如下提示：</p><p><img src="https://i.loli.net/2020/02/06/qIbFHxscpoy2PS1.png" alt="1.png"><br><img src="https://i.loli.net/2020/02/06/hfiJvENZSu6AcWq.png" alt="2.png"><br><img src="https://i.loli.net/2020/02/06/HANVIcaGTtUpw8h.png" alt="3.png"></p><p>这时需要选择“merge files”或者“merge”按钮，注意不要选择“replace”，这样ICEM就完成了对网格的装配。</p><h3 id="网格组装时的交界面设置">网格组装时的交界面设置</h3><p>如模型是由2部分组成，如果2部分是用同样的方式划的网格，那么在FLUENT里其交接面设置为interior，如果2个部分分别用不同的方式划网格，那么在fluent里其交接面设置为interface。</p><p>网格组装完成后，在拼接处会存在两个面，这时候需要对两个交界面进行配对，可以在fluent里面的mesh interface里面创建。若不进行交界面配对，在fluent计算中可能会出现“unassigned interface zone detected for inrerface 4”字眼的提示错误。</p><p><img src="https://i.loli.net/2020/02/06/JbBuVPZos7NfO3l.png" alt="5.png"></p><h2 id="参考链接">参考链接</h2><p><a href="https://sites.google.com/site/abrahamgxcfd/Home/ansys-fluent/xiegeigangjiechufluentdexinshou#TOC--" target="_blank" rel="noopener">写给刚接触Fluent的新手</a><br><a href="http://www.fangzhenxiuxiu.com/html/post_detail_119128.html?id=119128" target="_blank" rel="noopener">ICEM使用经验与网格划分错误分析</a><br><a href="https://jingyan.baidu.com/article/fcb5aff76ddfebedaa4a71f1.html" target="_blank" rel="noopener">结构化网格中各种类型的Block创建攻略</a><br><a href="https://zhuanlan.zhihu.com/p/21338549" target="_blank" rel="noopener">如何正确选择湍流 CFD 模型？</a><br><a href="http://www.lanmaowang.com/?p=36116" target="_blank" rel="noopener">ICEM网格装配</a><br><a href="http://blog.sina.com.cn/s/blog_599d8faa010121yc.html" target="_blank" rel="noopener">利用6DOF模型计算小球自空气中跌落水中</a><br><a href="https://kuaibao.qq.com/s/20191216A0SWSN00?refer=spider" target="_blank" rel="noopener">FLUENT小球落水浮起模拟</a><br><a href="https://www.sohu.com/a/133836139_722157" target="_blank" rel="noopener">Fluent 动网格实例具体操作</a><br><a href="http://blog.sina.com.cn/s/blog_af99efb50102zbsg.html" target="_blank" rel="noopener">Fluent中动网格负体积成因</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ICEMCFD(The Integrated Computer Engineering and Manufacturing code for Computational Fluid Dynamics)是一种专业的CAE前处理软件。作为专业的前处理软件ICEMCFD为所有世界流行的CAE软件提供高效可靠的分析模型。它拥有强大的CAD模型修复能力、自动中面抽取、独特的网格“雕塑”技术、网格编辑技术以及广泛的求解器支持能力。同时作为ANSYS家族的一款专业分析环境，还可以集成于ANSYS Workbench平台, 获得Workbench的所有优势。ICEM作为fluent和CFX标配的网格划分软件，取代了GAMBIT的地位。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://ink-bottle.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>毕业随记</title>
    <link href="https://ink-bottle.github.io/2019/06/27/%E6%AF%95%E4%B8%9A%E9%9A%8F%E8%AE%B0/"/>
    <id>https://ink-bottle.github.io/2019/06/27/毕业随记/</id>
    <published>2019-06-27T07:40:19.000Z</published>
    <updated>2020-01-01T04:43:40.452Z</updated>
    
    <content type="html"><![CDATA[<p>转眼已经到了毕业的时候，大学四年以来，我从一个尚带有高中生的稚气和懵懂的新生到现在的已经较为成熟的大四毕业生，在这其中的时间里我不仅仅是学习到了很多知识与技能，还有获得了自我学习的能力以及认识了一群有趣的朋友。虽然大学四年多多少少有一些遗憾，但是从我的整个经历与变化来看，这四年将会是我人生难以外却且宝贵的记忆，我过得充实而多彩。</p><a id="more"></a><p>学校敲定的毕业时间是7月1日，早在毕业设计答辩结束时就已经开始了毕业离校工作。对于我们学生来说，除了准备离校以外，还有参加聚餐，拍毕业照等很多活动。在邀请一系的老师的谢师宴上，我坐在我的研究生导师旁边，由于导师平时很忙，我和他见面的次数寥寥无几。在聊天中，结果发生了以下对话😰：</p><blockquote><p>导师：你是工作还是升学？<br>我：升学……<br>导师：去了哪所学校啊？<br>我：留在本校……<br>导师：跟了哪位老师？<br>我：我跟着您读研啊……<br>导师：……</p></blockquote><p>场面一度极为尴尬😅。</p><p><img src="https://i.loli.net/2019/06/29/5d1739dc9d8bb68779.jpg" alt="1561803175966.jpg"></p><p>由于是毕业聚餐，各桌敬酒，大家都很激动，短时间内二十多杯酒入肚之后，我的头开始变得有点重，后来没有忍住自己跑到卫生间吐了一波，生平以来第一次不是因为晕车而吐的经历也挺奇妙的。</p><p>在学院举办的院毕业典礼上，我有幸获得了院优秀毕业生和优秀毕设的荣誉，学院给优秀毕业生的奖品是一部kindle，这真的让我十分惊喜。同时，我们穿上学士服，院长一一为我们拨穗，标志着我们正式获得学士学位。在之后的毕业晚会上，我参与了朗诵的节目《少年中国说》，民国学生的衣服穿在身上确实很正气~。晚会的其他节目也都很精彩，有我室友的萨克斯独奏表演，有大艺团的舞蹈表演，有本院学弟的相声表演（相声演员的功底很不错啊），还有毕业生自己谱曲写词的演唱歌曲等等，可以说是很难忘的一次晚会了。</p><p><img src="https://i.loli.net/2019/06/29/5d17427db85d248009.jpg" alt="qq_pic_merged_1561805047179.jpg"></p><p>接下来的一天晚上班级定下了6小时轰趴馆，我们班剩下能聚在一起的时间也就这么几次了，班里的同学有部分找到工作，有部分去别的学校上研，有部分二战，以后估计也很难聚齐了吧。</p><p>校毕业典礼在新校区举行，虽然个人很不习惯坐车，但一生一次的本科毕业典礼还是要去的🤨，顺便获得了学校黄铜书签一枚。</p><p>毕业季，每个人都要面临的就是搬宿舍了，而两年前我们从新校区搬到老校区时也经历过一回，还记得当时我们把自己的物品打包好装进麻袋或箱子，用记号笔写上自己的信息，然后往车上搬，而整个西安都在下雨，最终到达老校区宿舍时不少物品也都沾了水，当时整个院的学生一起安排搬宿舍，所以电梯口挤满了人群和行李，忙活了很长时间才将宿舍草草收拾好。如今我在本校上研，需要搬宿舍也就是从一栋楼转移到另外一栋楼罢了，搬宿舍的天气一同往日，阴雨绵延不断，幸得室友借来了小推车，搬宿舍的进程就快了许多，但还是花费了一整个白天才堪堪搬完，又花了一晚上将宿舍内擦干净并将物品摆好，搬家确实是一件很费时费力的工作。</p><p>接下来的暑假……别想了，我已经没有暑假了，一切都已经安排得明明白白😢。</p><p>总之，感谢学校四年的培养，接下来的研究生三年，在西安这座古朴而厚重的城市里，我也将继续走下去，成长为自己想象的模样。</p><p><img src="https://i.loli.net/2019/06/29/5d17576078c3320197.png" alt="8ed55a05926b802e7173e9fa754c1092.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转眼已经到了毕业的时候，大学四年以来，我从一个尚带有高中生的稚气和懵懂的新生到现在的已经较为成熟的大四毕业生，在这其中的时间里我不仅仅是学习到了很多知识与技能，还有获得了自我学习的能力以及认识了一群有趣的朋友。虽然大学四年多多少少有一些遗憾，但是从我的整个经历与变化来看，这四年将会是我人生难以外却且宝贵的记忆，我过得充实而多彩。&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>《宅男的人间冒险》——宅男也能拥有爱情？</title>
    <link href="https://ink-bottle.github.io/2019/06/15/%E5%AE%85%E7%94%B7%E4%B9%9F%E8%83%BD%E6%8B%A5%E6%9C%89%E7%88%B1%E6%83%85%EF%BC%9F/"/>
    <id>https://ink-bottle.github.io/2019/06/15/宅男也能拥有爱情？/</id>
    <published>2019-06-15T14:30:27.000Z</published>
    <updated>2020-01-01T04:43:46.068Z</updated>
    
    <content type="html"><![CDATA[<p>前几天我的毕设答辩顺利地结束了，我的生活很快就出现了大块的空闲时间，虽然还有许许多多零零碎碎的事情，比如补齐毕设材料的签字评阅，思想汇报的书写等等，但我还是能够用很多时间来看书，刷手机，玩游戏。最近一款国产单机游戏《宅男的人间冒险》在玩家中获得了优秀的口碑和话题，steam上现在拥有着92%的好评率，在通关了谷恒条野线和魔女线和老婆线后（虽然还有很多结局与成就没有解锁），我想分享自己对这款游戏的感想。另外推荐大家也去支持一下这款游戏啊，只需要32软妹币就能带回这款优秀的游戏啦。</p><a id="more"></a><blockquote><p>《宅男的人间冒险》是一款不一样的文字冒险游戏。故事讲述一个单身多年的宅男，渴望得到恋爱，从而不小心踏上了奇幻的旅程，最终获得女孩子的芳心的故事。这款游戏集讲故事与另类的密室解密于一身，还包括了各式各样的小游戏，以及不同类型的战斗，以带给玩家不同以往的游戏体验和乐趣。</p></blockquote><p>首先点开游戏的界面是这样的漫画风格，简洁明了又带有一些沙雕的感觉。</p><p><img src="https://i.loli.net/2019/06/15/5d050b2a2acfd59423.png" alt="TIM图片20190615231335.png"></p><p>游戏的玩法和大多数文字冒险游戏一样，用鼠标点击过剧情以及选择不同的分支剧情选项，但是这款游戏又有所不同，里面藏有很多不同的游戏玩法，包括解谜、rpg回合制、fpp射击、弹幕躲避等，丰富了游戏的可玩性。在老婆线中有第一人称射击游戏，这让我想起了小时候玩过的《血战上海滩》，在异世界中有回合制的玩法，在谷恒条野线中有找准时机格挡反击的玩法，之间又有穿插的解谜元素，这让游戏的可玩性大大提升。</p><p>游戏里的各种玩梗经常可以让玩家会心一笑，不仅联系到了很多动漫角色，连b站up主也接连出演，比如中国boy、C菌等，游戏中的对话也有不少吐槽，游戏氛围显得轻松活泼。</p><p><img src="https://i.loli.net/2019/06/16/5d059e4c935c215045.png" alt="TIM图片20190616094118.png"><br><img src="https://i.loli.net/2019/06/16/5d059e89d3dbe69451.png" alt="TIM图片20190616094223.png"></p><p>游戏刚进入时主角（我）要和女网友见面，但（我）简直是个毫无情商的宅男，居然带女孩子来这样的咖啡厅吃饭，看着这些菜单选项，每一个都无从下手啊。</p><p><img src="https://i.loli.net/2019/06/16/5d05a0d1b706432543.png" alt="TIM图片20190616095208.png"></p><p>女网友美美看着菜单沉默了。而（我）居然还兴奋地问道：“怎么样，是不是很吸引！”，简直没救了。接下来的聊天简直是直击灵魂：</p><p><img src="https://i.loli.net/2019/06/16/5d05a173557e234946.png" alt="TIM图片20190616095450.png"></p><p>这样一来，美美直接借故打电话离开了，而（我）则出现了两个选项：</p><p><img src="https://i.loli.net/2019/06/16/5d05a2aa0cf4348370.png" alt="TIM图片20190616100000.png"></p><p>若是选择“一直等见到美美为止”的话，则会出发一个badend“等你回来，美美”，即一直等到死，尾生抱柱式的结局，这也算作者的恶趣味吧。</p><p><img src="https://i.loli.net/2019/06/16/5d05a3b7497ba41432.png" alt="TIM图片20190616100405.png"></p><p>游戏故事可分为三条主线，按照女主角的出现顺序分别为老婆线（女主角为戴花画家帽、自称老婆的女生）、宅女线（也叫双马尾线，女主角谷恒条野是一名爱打游戏的双马尾女孩）和异界魔女线（女主角的名字叫 (´･ω･｀)，是身处异世等待勇士的魔女）。</p><p>在我个人看来，这三条线又意味着不同的身份，老婆线中的（我）是作为一个舔狗存在的，而谷恒条野线（我）的身份更像作为一个男朋友，异界魔女线中（我）又像一名丈夫，不负她的漫长等待。</p><h2 id="一-老婆线">一、老婆线</h2><blockquote><p>进入条件：见到老婆选择推开少女，然后在游戏厅中不开启异界线，在与宅女玩游戏时输掉即可。</p></blockquote><p>宅男（我）在便利店结识了一位画家少女，将她从坠落的吊灯下解救。</p><p><img src="https://i.loli.net/2019/06/16/5d05a7514a97714017.png" alt="TIM图片20190616101949.png"></p><p>当（我）介绍自己的名字并说明（我）是一个宅男后，询问她如何称呼时，她居然让（我）叫她老婆？</p><p><img src="https://i.loli.net/2019/06/16/5d05a916c9cb823535.png" alt="TIM图片20190616102723.png"></p><p>第二天，男主（我）在公园为保护老婆，与一群黑衣人展开激烈的枪战，老婆不幸中枪。在为她治疗的过程中，男主（我）得知了女孩的身世（父亲是科学家，因为预言地球即将被陨石撞击毁灭而被杀害，女孩也遭到追杀）。</p><p>于是两人踏上神秘岛，准备开启机关保护地球，孰料所谓的真相竟是天大的反转（女孩其实是个想毁灭地球的中二少女，她将主角当成工具人，想利用他开启发条，结果本应与地球擦肩而过的陨石真的撞到了地球，世界被毁灭了。后面对主角（我）的一顿嘲讽真的感受到了深深的伤害：</p><p><img src="https://i.loli.net/2019/06/16/5d05abdc023be34405.jpg" alt="TIM图片20190616103907.jpg"><br><img src="https://i.loli.net/2019/06/16/5d05abebd0ba929314.jpg" alt="TIM图片20190616103909.jpg"></p><p>男主眼见事态无法挽回，利用时光机器回到初遇女主的便利店，若选择不救她则达成“宅男救世主”结局，即女主被灯砸死，而世界得到拯救；若依然选择救她，则会触发真结局“要有爱，不要世界”。</p><p><img src="https://i.loli.net/2019/06/16/5d05b2dfad40671250.jpg" alt="37796599-4024-4433-b17a-d1e3300b1d83.jpg"></p><blockquote><p>我不知道为什么要救她，我不知道为什么我再一次和她踏上旅程，我不知道我为什么要犯这样的错，但是我，心甘情愿。</p><p>我知道她不爱我，一直是在骗我。我甚至不知道她的真名是什么。但是，但是我爱上她了。世界毁灭又怎样？可以和心爱的人一起摧毁这个世界，没什么比这更加浪漫了。</p></blockquote><p>在真结局里，在漫天陨石碎片下，男主（我）向老婆袒露了穿越的秘密，并真诚的表达了对她的喜欢，女主接受了男主（我）的告白。</p><h2 id="二-谷恒条野线">二、谷恒条野线</h2><blockquote><p>进入条件：在便利店买本游戏攻略降低游戏难度，不开启异界线，在游戏中赢了宅女即可进入双马尾线。便利店偶遇老婆的话救不救都可以。</p></blockquote><p>这是游戏里唯一有配音的角色，而且还是粤语配音，男主在超霸机厅见到双马尾女孩，她正在打游戏，而旁边的一群死宅没有一个能赢过她的，此时双马尾女孩看到男主（我），点名要和男主（我）对决，赢了之后就会获得双马尾女孩的青睐，并得到第二天一起逛漫展的邀请。</p><p><img src="https://i.loli.net/2019/06/16/5d05c6889a16097708.png" alt="TIM图片20190616123257.png"></p><p>第二天在游戏高手嘉年华门口，为了不走散，双马尾女孩牵着男主（我）的手穿过拥堵的人群，在这个过程中，男主（我）也知道了双马尾女孩的名字叫谷恒条野（懂得粤语的同学应该知道这是什么意思了2333）。</p><p>男主（我）在漫展中和谷恒条野一起找回中国boy的箱子，顺便也游览了漫展节目，在二人肚痛上厕所时，马桶爆炸弹飞，两人被抓到了宇宙飞船上。此时遇到外星生物，谷恒条野戴上机械臂与怪物发生战斗，由于机械臂太重，因此战斗过程是由男主用手柄控制的。</p><p><img src="https://i.loli.net/2019/06/16/5d05c97258ff016382.png" alt="TIM图片20190616124524.png"><br><img src="https://i.loli.net/2019/06/16/5d05c9c6e4efa32009.png" alt="TIM图片20190616124649.png"></p><p>陆续击败了外星人，飞虫，独眼怪等人后，找到宇宙飞船，通过一系列解密开走太空船准备飞往地球，这个过程中，男主（我）已经对谷恒条野产生了深深的依赖，十分担心和害怕谷恒条野有什么闪失和伤害，两人在并肩战斗的经历里已经有了微妙的情愫。</p><p><img src="https://i.loli.net/2019/06/16/5d05d2418e4ae17700.png" alt="TIM图片20190616132246.png"><br><img src="https://i.loli.net/2019/06/16/5d05cf69d475697506.png" alt="TIM图片20190616131029.png"></p><p>在飞往地球的过程中二人聊天，对彼此也是越来越了解，知道了男主家里着火不能回家之后主动邀请男主来自己家住，还提出要不要试着交往，男主（我）在心神激荡之际错按按钮，被救生舱弹出飞船，落到了一个陌生星球（这样双马尾的直率又坦诚又爱吐槽的宅女有谁不爱啊喂）。</p><p><img src="https://i.loli.net/2019/06/16/5d05d3149f67249887.png" alt="TIM图片20190616132635.png"><br><img src="https://i.loli.net/2019/06/16/5d05d37a0473474786.png" alt="TIM图片20190616132811.png"><br><img src="https://i.loli.net/2019/06/16/5d05d42a7a7e923087.png" alt="TIM图片20190616133110.png"><br><img src="https://i.loli.net/2019/06/16/5d05d46a12e7a50437.png" alt="TIM图片20190616133216.png"><br><img src="https://i.loli.net/2019/06/16/5d05d50263ecf69438.png" alt="TIM图片20190616133446.png"></p><p>陌生的星球上，男主喝了泉水变成了史莱姆，并遇到了另一只史莱姆。它告诉男主，只有亲吻了人类才能变回人。男主等到了前来救他的谷恒条野，变回人类。接着和谷恒条野一起击败了这个星球上的章鱼怪，达成结局“无敌的我俩，并不寂寞”。</p><p><img src="https://i.loli.net/2019/06/16/5d05d5dd28e3d81854.png" alt="TIM图片20190616133759.png"></p><blockquote><p>尽管我们现在被怪物所包围，但是并没有觉得绝望，甚至觉得一定会赢。因为，有她。有她在身边我就安心了。</p><p>总感觉这趟旅程她一直在保护我，无时无刻给我满满的安全感，她不仅坚强，而且总是充满斗志，我愿意一直躲在她身后，直到永远。</p></blockquote><p><img src="https://i.loli.net/2019/06/16/5d05d9a66935555311.png" alt="TIM图片20190616135434.png"></p><p>在一地的外星怪物的尸体旁，男主（我）向谷恒条野告白，灿烂的星空下，看着谷恒条野傲娇又羞红的脸庞，这应该是这游戏里面最甜的爱情了。</p><h2 id="三-魔女线">三、魔女线</h2><blockquote><p>进入条件：便利店购买十字螺丝刀，机厅内一楼拿到板凳，在二楼的楼梯口处搭板凳，于空调处取得一字螺丝刀头，回到一楼获得板凳的地方拆掉游戏机，放入充电宝后机厅爆炸，老板米高将你传送到异界寻求宝物拯救街机厅和被炸死的人们。</p></blockquote><p>男主（我）在异界森林遇到怪物死亡后，魔女将男主（我）复活救起，她的名字叫(´･ω･｀)（我也好奇为什么魔女的名字是一个颜文字）。在她的提示下，男主拔出马桶之剑，却意外与魔女接吻签订了契约，开始异界冒险。</p><p>异世界里时间流逝和现实世界不同，异世界里100年相当于现实世界10分钟，魔女因为自身的宿命一直在勇者森林等待着勇者的到来并和他签订契约，她无法忍受漫长的等待和孤独，因此一直希望男主（我）能一直留在这里陪着她。</p><p><img src="https://i.loli.net/2019/06/16/5d05dbb1e2da388542.png" alt="TIM图片20190616140320.png"></p><p>在异世界里，男主（我）和魔女一起刷怪赚钱，魔女一直催着男主（我）装修婚房要一起共度一生，若买齐家具来到新家并选择留下来，则达成“与你相遇，好幸运”结局，即男主（我）放弃回现实世界救街机厅和被炸死的人们而选择和魔女一起生活。</p><p>二人一起冒险搜集神器，先后打通几大秘境，最后来到神秘的传送门前，通过一系列解密游戏比如画中世界等，发现原来所谓的异界是一盘游戏卡带的世界，而男主所在的现实是另一个名叫“街机世界”的游戏世界。男主只要进入街机世界，就会回到现实，达成结局。</p><p>由于街机世界卡带的要求是1player，魔女不能一同前往，那就意味着要留在异世界等待男主（我）回来，而异世界里100年相当于现实世界10分钟，也就意味着魔女可能要等男主近百年的时间。</p><p><img src="https://i.loli.net/2019/06/16/5d05def5f26c984142.jpg" alt="TIM图片20190616141705.jpg"></p><blockquote><p>男主（我）表示：</p><p>我一定……会回来的，相信我……其实我，在这段冒险的过程中，已经……喜欢上你了！应该说我从刚遇到你的第一个晚上，我就已经有留下来的决心。</p><p>我不需要你对我使用什么爆炸的契约来锁住我的心。因为我真的真的喜欢上你了。如果我连回去救他们这个事情都完成不了，我还有什么资格给予你承诺！</p><p>我没有要离开你，我只不过是去完成我应该完成的任务。相信我，我从来没有欺骗你。</p></blockquote><p>男主（我）承诺一定会回来，接着回到现实世界将人们全部救活之后，按照承诺回去异世界，达成“你的等待，我的未来”的完美结局。</p><blockquote><p>你果然没有放弃我，我知道你等我等太久了，可能换了是我也未必能这么有恒心。你真的太好了，我愿意以后都留在这里，永远不离开。</p><p>是你让我知道什么叫做坚持，我已经对你死心塌地了，我不会辜负你对我的期待。我保证，以后留在这里和你一起好好生活下去。</p></blockquote><p><img src="https://i.loli.net/2019/06/16/5d05e23fa913e86646.png" alt="TIM图片20190616143112.png"></p><p>而魔女却笑着说：“你不是回去拯救他们吗？怎么一瞬间就回来了？”然而，她身后的树木却不会骗人，相比于我离开时，变得粗壮而茂密了许多。</p><p><img src="https://i.loli.net/2019/06/16/5d05e358c567950338.png" alt="TIM图片20190616143557.png"></p><p>“我们永远在一起哦”“你敢离开这个世界，你的身体马上会爆炸哦”</p><p>这样一个愿意以一生等待你的人，又有什么理由不和她好好在一起呢？</p><h2 id="参考链接">参考链接</h2><p><a href="https://www.2p.com/article/281044" target="_blank" rel="noopener">《宅男的人间冒险》：宅男就要配宅女老婆 (´･ω･｀)</a><br><a href="https://www.zhihu.com/question/325493494" target="_blank" rel="noopener">如何评价游戏《宅男的人间冒险》?</a><br><a href="https://www.gcores.com/articles/110272" target="_blank" rel="noopener">我花20小时打通了《宅男的人间冒险》并和制作人史悲老师聊了聊</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天我的毕设答辩顺利地结束了，我的生活很快就出现了大块的空闲时间，虽然还有许许多多零零碎碎的事情，比如补齐毕设材料的签字评阅，思想汇报的书写等等，但我还是能够用很多时间来看书，刷手机，玩游戏。最近一款国产单机游戏《宅男的人间冒险》在玩家中获得了优秀的口碑和话题，steam上现在拥有着92%的好评率，在通关了谷恒条野线和魔女线和老婆线后（虽然还有很多结局与成就没有解锁），我想分享自己对这款游戏的感想。另外推荐大家也去支持一下这款游戏啊，只需要32软妹币就能带回这款优秀的游戏啦。&lt;/p&gt;
    
    </summary>
    
      <category term="游戏" scheme="https://ink-bottle.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo博客添加emoji表情（转载）</title>
    <link href="https://ink-bottle.github.io/2019/06/07/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0emoji%E8%A1%A8%E6%83%85/"/>
    <id>https://ink-bottle.github.io/2019/06/07/hexo博客添加emoji表情/</id>
    <published>2019-06-07T14:20:30.000Z</published>
    <updated>2020-01-01T04:38:10.129Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来觉得单调的文字博客缺少着一点生机和活力，在这个表情包横行的世界里，只有生动的表情才能展现自己文字背后的感情，虽然我可以在文章中添加图片表情包，但是挑选并上传图片总是一件麻烦事，还不一定能够找到符合心境的合适表情，若是发颜文字比如(￣へ￣)或者是(≧∇≦)/等等，遇到换行就很尴尬了，因此需要添加emoji表情比如😕😝。原博客链接：<a href="https://chaxiaoniu.oschina.io/2017/07/10/HexoAddEmoji/#" target="_blank" rel="noopener">Hexo中添加emoji表情</a></p><a id="more"></a><p>由于markdown 渲染引擎的问题，exo默认是采用hexo-renderer-marked,这个渲染器不支持插件扩展，因此也不支持emoji解析，还有一个支持插件扩展的是 hexo-renderer-markdown-it，这个支持插件配置，可以使用markwon-it-emoji 插件来支持emoji。需要将原来的 marked 渲染器换成 markdown-it渲染器。所以我们可以使用这个渲染引擎来支持emoji表情。</p><blockquote><p>相关链接：</p><p><a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a><br><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a><br><a href="https://github.com/markdown-it/markdown-it-emoji" target="_blank" rel="noopener">markwon-it-emoji</a></p></blockquote><h2 id="安装过程">安装过程</h2><h3 id="安装新的渲染器">安装新的渲染器</h3><p>首先进入博客目录，卸载hexo默认的marked渲染器，安装markdown-it渲染器，运行的命令如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm un hexo-renderer-marked --save</span><br><span class="line">$ npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure><p>​之后安装 markdown-it-emoji 插件 😃 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure><p>据说<a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>的速度要比 Hexo 原装插件要快，而且功能更多：</p><blockquote><p>Main Features:</p><ul><li>Support for <a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>, <a href="https://help.github.com/en/categories/writing-on-github" target="_blank" rel="noopener">GFM</a> and <a href="https://commonmark.org/" target="_blank" rel="noopener">CommonMark</a></li><li>Extensive configuration</li><li>Faster than the default renderer | hexo-renderer-marked</li><li>Safe ID for headings</li><li>Anchors for headings with ID</li><li>Footnotes</li></ul></blockquote><h3 id="编辑站点配置文件">编辑站点配置文件</h3><p>这里的站点配置文件是指位于博客根目录下的 _config.yml，编辑它，然后在末尾添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Markdown-it config</span><br><span class="line">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class="line">markdown:</span><br><span class="line">  render:</span><br><span class="line">    html: true</span><br><span class="line">    xhtmlOut: false</span><br><span class="line">    breaks: true</span><br><span class="line">    linkify: true</span><br><span class="line">    typographer: true</span><br><span class="line">    quotes: &apos;“”‘’&apos;</span><br><span class="line">  plugins:</span><br><span class="line">    - markdown-it-abbr</span><br><span class="line">    - markdown-it-footnote</span><br><span class="line">    - markdown-it-ins</span><br><span class="line">    - markdown-it-sub</span><br><span class="line">    - markdown-it-sup</span><br><span class="line">    - markdown-it-emoji  ## add emoji</span><br><span class="line">  anchors:</span><br><span class="line">    level: 2</span><br><span class="line">    collisionSuffix: &apos;v&apos;</span><br><span class="line">    # If `true`, creates an anchor tag with a permalink besides the heading.</span><br><span class="line">    permalink: false  </span><br><span class="line">    permalinkClass: header-anchor</span><br><span class="line">    # The symbol used to make the permalink</span><br><span class="line">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure><p>上面的是hexo-renderer-markdown-it的所有选项的配置，详细的每一项配置说明，需要到<a href="https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Advanced-Configuration" target="_blank" rel="noopener">Advanced Configuration</a>中查看。</p><blockquote><p>注意要在plugins:选项中加上- markdown-it-emoji ，即加上emoji插件。</p></blockquote><h3 id="使用方法">使用方法</h3><ol><li>在<a href="https://www.emojicopy.com/" target="_blank" rel="noopener">Emoji</a>中找到你想要的表情，然后点击即可复制。</li><li>比如你想发一个笑脸 😄 直接输入笑脸对应的 emoji 编码 😄 就可以。</li></ol><p>​让我们emoji表情里尽情耍一耍~~~~🐰 🐨 🐸 🐞 🐾 😄 💙✈️👶🐤🎈🐻🌵👯😰🍂💋🎃🐙😊😇🙂🙃😉😀😃😄😁😆😅😂🤣☺️😌😍🥰😘😗😙😚😋😛😝😜🤪🤨🧐🤓😎🤩🥳😏😒😞😔😟😕🙁☹️😣😖😫😩🥱🥺😢😭😤😠😡🤬🤯😳🥵🥶😱😨😰😥😓🤗🤔🤭🤫🤥😶😐😑😬🙄😯😦😧😮😲😴🤤😪😵🤐🥴🤢🤮🤧😷🤒🤕🤑🤠</p><h3 id="相关链接">相关链接</h3><p><a href="https://lz5z.com/hexo%E6%94%AF%E6%8C%81emoji/" target="_blank" rel="noopener">hexo 支持 emoji</a><br><a href="http://blog.eamonn.cn/2016/01/22/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E9%87%8C%E6%8F%92%E5%85%A5emoji%E8%A1%A8%E6%83%85/#more" target="_blank" rel="noopener">在Hexo博客里插入Emoji表情</a><br><a href="https://segmentfault.com/a/1190000009478837" target="_blank" rel="noopener">搭建Hexo博客进阶篇–API和一些小部件（四）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来觉得单调的文字博客缺少着一点生机和活力，在这个表情包横行的世界里，只有生动的表情才能展现自己文字背后的感情，虽然我可以在文章中添加图片表情包，但是挑选并上传图片总是一件麻烦事，还不一定能够找到符合心境的合适表情，若是发颜文字比如(￣へ￣)或者是(≧∇≦)/等等，遇到换行就很尴尬了，因此需要添加emoji表情比如😕😝。原博客链接：&lt;a href=&quot;https://chaxiaoniu.oschina.io/2017/07/10/HexoAddEmoji/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo中添加emoji表情&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://ink-bottle.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>端午节随记</title>
    <link href="https://ink-bottle.github.io/2019/06/07/%E7%AB%AF%E5%8D%88%E8%8A%82%E9%9A%8F%E8%AE%B0/"/>
    <id>https://ink-bottle.github.io/2019/06/07/端午节随记/</id>
    <published>2019-06-07T12:47:53.000Z</published>
    <updated>2020-01-01T04:44:02.266Z</updated>
    
    <content type="html"><![CDATA[<p>今天是五月初五端午节，在这里祝大家端午节安康。巧合的是今天也是全国高考的日子，在这里也祝各位高三的学弟学妹们一举高“粽”，都能考上自己心仪的大学。</p><a id="more"></a><p>这几十天来我的的生活就是在写论文和改论文的过程中，论文完成的时间比较晚，大概在5月20号才完成初稿，交给指导老师过目后根据修改意见又陆陆续续改了几版，修改了一些格式问题以及增加了一些内容。由于今年我的学校的本科论文重复率要求是低于30%，翟天临事件作为前车之鉴，我也惴惴不安的把我的论文先自己查重一遍。关于查重网站，学校以知网为准，但是知网的费用确实也比较高，我等学生党花一次论文查重费用也比较肉疼，然而其他的免费查重网站也存在着一定的风险，于是我便选择了费用不是很高而且也比较权威的paperpass。因为查重算法的不同，据说paperpass的查重结果给出的查重率一般要比知网高一些，所以只要paperpass查重率低于30%也就没什么问题。</p><p>提交了我的论文后，得出的paperpass查重报告显示，我的重复率为10%，嗯，果然自己写的论文重复率不会高到哪去~</p><p><img src="https://i.loli.net/2019/06/07/5cfa6441975d478389.png" alt="TIM图片20190607211825.png"></p><p>学院安排6月10号答辩，今天PPT我也做好了，只需要我好好的准备一下通过应该是没问题的吧（这算不算是强行奶自己一口呢？）。</p><p>我原是南方人，每年端午节我妈都会提前一个星期开始准备包粽子，买好新鲜宽大的粽叶，晶莹的糯米，还有五花肉，（或者还有花生米，板栗等等），然后对粽叶进行洗刷晾晒以确保干净，淘洗糯米，把五花肉放进大碗里加上一些调味品如食盐料酒等等做成酱肉，取两片粽叶卷成漏斗状（惭愧，不知道为什么我当时怎么也学不会），加一些糯米，放上一块酱肉，然后加糯米填满，将粽叶覆盖，然后用扁长的某种叶子（忘了叫什么名字了😳）紧紧缠绕粽子两个方向然后打结，一个大肉粽就这么做好了，此时粽叶还是新鲜的，所以全身斑驳绿的四面体粽子非常好看，最后把一大盆（我妈每年经常会做这么多）肉粽分批放入高压锅进行蒸煮一个晚上，最后把出锅的粽子拎处来，这时由于粽叶被蒸煮，粽子全身已经变黑了，小心用大剪刀剪开缠绕的结（这个基本不可能手解的2333），剥开粽叶，将粽子放到碗里（或者直接手托着粽叶吃），那种香而糯的口感也基本只有我妈才能做得出了~</p><p>到了北方上学后，我才知道原来粽子有甜咸之分，最初知道这一事实的我是震惊的，简直是无法想象甜甜的粽子怎么能够下口呢？而我的北方室友则表示，世上怎么会有肉粽这样的黑暗料理，而我坚持认为这是因为他没有吃过南方的肉粽。端午节这一天，学校的食堂会免费送粽子，无一例外都是甜的，比如蜂蜜粽，红豆粽，红枣粽等等，我吃之后，虽然接受了甜粽子这一客观事实，但是强大的习惯还是让我觉得只有肉粽才最好吃。后来发现食堂旁边的小卖部里有肉粽可以买，兴奋地提几个回宿舍后发现这肉粽和我家的肉粽完全不在一个水平，简直是索然无味，也难怪我的室友会对肉粽产生偏见，又一次见识到了我国的南北差异啊。</p><p>今天吃到的学校的红豆粽：</p><p><img src="https://i.loli.net/2019/06/07/5cfa6e466dbdd41897.jpg" alt="TIM图片20190607220046.jpg"></p><p>最后，祝愿我自己毕业顺利！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是五月初五端午节，在这里祝大家端午节安康。巧合的是今天也是全国高考的日子，在这里也祝各位高三的学弟学妹们一举高“粽”，都能考上自己心仪的大学。&lt;/p&gt;
    
    </summary>
    
      <category term="心记" scheme="https://ink-bottle.github.io/categories/%E5%BF%83%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
